{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialog.module.css","components/Login/Login.module.scss","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Setting.tsx","components/Navbar/Friends/Friends.tsx","redux/dialogsReducer.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","common/Preloader/FormsControls/FormControls.tsx","utils/validators/validators.ts","components/Dialogs/Dialogs.tsx","hok/witthAuthRedirect.tsx","api/api.ts","components/Dialogs/DialogsContainer.tsx","redux/usersReducer.ts","assets/images/user.png","components/Users/Users.tsx","assets/images/preloader.gif","common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","redux/authReducer.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","redux/profileReducer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Login/Login.tsx","redux/appReducer.ts","App.tsx","redux/sidebarReducer.tsx","redux/redux-store.tsx","index.tsx","components/Users/Users.module.css","common/Preloader/FormsControls/FormsControl.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","Navbar","prpps","className","s","nav","item","to","activeClassName","activelink","News","Music","Setting","MyFriends","props","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","body","newMessageBody","Message","dialog","DialogItem","path","active","FormControl","meta","touched","error","children","hasError","styles","formControl","childrenWrapperStyle","fieldErrorWrapper","Textarea","input","restProps","Input","Checkbox","required","value","maxLengthCreator","maxLength","length","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsElements","dialogsPage","map","d","messagesElements","m","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","isAuth","authData","withAuthRedirect","Component","connect","ResultCodes","ResultCodeCaptcha","compose","dispatch","sendMessageAC","instance","axios","create","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","then","response","data","post","resultCode","delete","authAPI","res","email","password","rememberMe","captcha","profileAPI","getProfile","userId","getStatus","updateStatus","newText","put","status","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","items","totalUsersCount","isFetching","followingInProgress","filter","term","friend","followUser","userID","unfollowUser","setCurrentPage","toggleIsFetching","setFollowingInProgress","Users","pagesCount","Math","ceil","pages","i","push","pagesView","p","lowRange","highRange","selectedPage","onClick","event","onPageChange","u","src","photos","small","userPhoto","alt","photo","followed","disabled","some","btn","cont","Preloader","loader","imgs","UsersContainer","getUsersThunkCreator","usersPageData","this","followUserThunkCreator","unfollowUserThunkCreator","React","a","count","totalCount","login","captchaUrl","actions","payload","getAuthUserData","Header","header","loginBlock","logout","minLength","HeaderClassComponent","HeaderContainer","connector","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onStatusChange","e","currentTarget","prevProps","prevState","onChange","autoFocus","onBlur","statusBlock","onDoubleClick","ProfileInfo","descriptionBlock","large","fullName","lookingForAJob","lookingForAJobDescription","contacts","facebook","github","vk","instagram","twitter","website","youtube","mainLink","Post","likesCount","postsData","setStatus","profileReducer","newPost","newPostText","profileInfo","maxLength10","minLength2","AddMyPostFormRedux","MyPostsContainer","profilePage","addPost","addPostAC","postElements","postsBlock","posts","Profile","content","ProfileContainer","match","params","authorizedUserId","history","getUserProfileTC","getStatusTC","updateProfile","updateStatusTC","statusText","withRouter","LoginReduxForm","testData","inputWrapper","checkboxWrapper","loginBtn","formSummaryError","LoginPage","useSelector","useDispatch","PROFILE","singIn","pageName","stopSubmit","_error","initializeState","initialized","DIALOGS","CHAT","DEVELOPERS","LOGIN","App","initializeApp","render","DialogsContainer","Friends","app","promise","Promise","all","friends","icon","img","sidebarReducer","rootReducer","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14fb945f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activelink\":\"Navbar_activelink__2l0ss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__2nWS6\",\"dialogsItems\":\"Dialog_dialogsItems__1Ylnr\",\"active\":\"Dialog_active__24gaD\",\"dialog\":\"Dialog_dialog__3bJrQ\",\"messages\":\"Dialog_messages__19Bic\",\"message\":\"Dialog_message__1YXnE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__10IcO\",\"singIn\":\"Login_singIn__1cEUe\",\"pageName\":\"Login_pageName__24QtC\",\"header\":\"Login_header__26DqL\",\"form\":\"Login_form__1tdal\",\"testData\":\"Login_testData__1KY3Z\",\"inputWrapper\":\"Login_inputWrapper__1JqSs\",\"checkboxWrapper\":\"Login_checkboxWrapper__3YQ2B\",\"loginBtn\":\"Login_loginBtn__3UPLJ\"};","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from 'react-router-dom';\n\nexport type SitebarTypeProps = {\n    // appState: StateType\n}\n\nconst Navbar: React.FC<SitebarTypeProps> = (prpps) => {\n    return (\n        (\n            <nav className={s.nav}>\n\n                <div className={s.item}>\n                    <NavLink to=\"/profile\" activeClassName={s.activelink}> Profile </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/dialogs\" activeClassName={s.activelink}> Messages </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/users\" activeClassName={s.activelink}> Users </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/news\" activeClassName={s.activelink}> News </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/music\" activeClassName={s.activelink}> Music </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/setting\" activeClassName={s.activelink}> Settings </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/friends\" activeClassName={s.activelink}> Friends </NavLink>\n                </div>\n\n            </nav>\n        )\n    )\n}\nexport default Navbar;\n","import React from \"react\";\nimport s from './News.module.css'\n\nconst News = () => {\n    return (\n        <div>\n            NEWS\n        </div>\n    )\n}\n\nexport default News;","import React from \"react\";\nimport s from './Music.module.css'\n\nconst Music = () => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;","import React from \"react\";\nimport s from './Setting.module.css'\n\nconst Setting = () => {\n    return (\n        <div>\n            Setting\n        </div>\n    )\n}\n\nexport default Setting;\n\n\n","import React from 'react';\n\ntype FriendTypeProps = {\n    // photo: SitebarType\n}\n\nconst MyFriends: React.FC<FriendTypeProps> = (props) => {\n\n    // let friendsElements = props.photo.icon.map(f => <Friends key={f.id}/>);\n    // let messagesElements = props.messages.map(m => <Message name={m.name}/>);\n\n    return (\n      <div>\n          <div>\n              {/*{friendsElements}*/}\n          </div>\n          <div>\n              {/*{messagesElements}*/}\n          </div>\n      </div>\n    )\n}\n\nexport default MyFriends;\n","import {ActionsTypes} from '../types/dispatchTypes';\nimport {DialogType, MessagesType} from '../types/types';\n\nconst SEND_MESSAGE = 'SEND-MESSAGE ';\n\nconst initialState = {\n\tdialogs: [\n\t\t{id: 1, name: 'Dimych'},\n\t\t{id: 2, name: 'Andrey'},\n\t\t{id: 3, name: 'Sveta'},\n\t\t{id: 4, name: 'Sasha'},\n\t\t{id: 5, name: 'Valera'},\n\t\t{id: 6, name: 'Viktor'},\n\t] as Array<DialogType>,\n\tmessages: [\n\t\t{id: 1, message: 'Hello!!!'},\n\t\t{id: 2, message: 'Haw are you?'},\n\t\t{id: 3, message: 'This is my friend.'},\n\t\t{id: 4, message: 'yo'},\n\t\t{id: 5, message: 'yo'},\n\t] as Array<MessagesType>,\n};\n\nexport type initialStateType = typeof initialState\n\nexport const dialogsReducer = (state: initialStateType = initialState, action: ActionsTypes): initialStateType => {\n\tswitch (action.type) {\n\t\tcase SEND_MESSAGE:\n\t\t\tlet body = action.newMessageBody;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: [...state.messages, {id: 6, message: body}]\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const sendMessageAC = (newMessageBody: string) => {\n\treturn {\n\t\ttype: SEND_MESSAGE,\n\t\tnewMessageBody: newMessageBody\n\t} as const\n}\n\nexport default dialogsReducer;\n","import React from 'react';\nimport s from './../Dialog.module.css'\n\n\nexport type MessageItemProps = {\n    message: string\n}\n\n\nconst Message: React.FC<MessageItemProps> = (props) => {\n    return <div className={s.dialog}> {props.message} </div>\n}\n\n\nexport default Message;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './../Dialog.module.css'\nimport {DialogItemType} from '../../../types/types';\n\n// export type DialogItemProps = {\n//     name: string\n//     id: number\n// }\n\nconst DialogItem: React.FC<DialogItemType> = (props) => {\n    let path = '/dialogs/' + props.id;\n\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem;\n","import React from 'react';\nimport s from './FormsControl.module.css';\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from 'redux-form';\nimport {FieldValidatorType, required} from '../../../utils/validators/validators';\n\ntype FormControlPropsType = {\n\tmeta: WrappedFieldMetaProps\n}\n\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\n\tconst hasError = touched && error;\n\n\tconst styles = `${s.formControl}  ${hasError ? s.error : ''}`\n\n\treturn (\n\t\t<div className={styles}>\n\t\t\t<div className={s.childrenWrapperStyle}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t\t<div className={s.fieldErrorWrapper}>\n\t\t\t\t{\n\t\t\t\t\thasError && <span>{error}</span>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\n\tconst {input, meta, ...restProps} = props\n\treturn <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\n}\n\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\n\tconst {input, meta, ...restProps} = props\n\treturn <FormControl {...props}>\n\t\t<input {...input}{...restProps}/>\n\t</FormControl>\n}\n\nexport const Checkbox: React.FC<WrappedFieldProps> = (props) => {\n\tconst {input, meta, ...restProps} = props\n\treturn <FormControl {...props}>\n\t\t<input {...input}{...restProps}/>\n\t</FormControl>\n}\n\n//create wrapper\nexport const createField = <FormKeysType extends string>(placeholder: string | null,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t name: FormKeysType,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t component: React.FC<WrappedFieldProps>,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t validators: Array<FieldValidatorType>,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t props = {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t text = '') => (\n\t<div>\n\t\t<Field placeholder={placeholder}\n\t\t\t   name={name}\n\t\t\t   component={component}\n\t\t\t   validate={validators}\n\n\t\t\t   {...props}/>\n\t\t{text}\n\t</div>\n)\n\n//get all props keys for form without mistakes\nexport type GetStringKeys<T> = Extract<keyof T, string>","export type FieldValidatorType = (value: string) => string | undefined\n\nexport const required: FieldValidatorType = (value) => {\n\tif (value) return undefined;\n\n\treturn 'Field id required';\n}\n\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\n\tif (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\n\n\treturn undefined;\n}\n\nexport const minLengthCreator = (minLength: number): FieldValidatorType => (value) => {\n\tif (value && value.length <= minLength) return `Min length is ${minLength} symbols`;\n\n\treturn undefined;\n}","import React, {ChangeEvent} from 'react';\nimport s from './Dialog.module.css'\nimport Message from './Message/Message';\nimport DialogItem from './DialogItem/DialogItem';\nimport {DialogsPropsType} from '../../types/types';\nimport {Redirect} from 'react-router-dom';\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\nimport { Textarea } from '../../common/Preloader/FormsControls/FormControls';\nimport {maxLengthCreator, minLengthCreator, required } from '../../utils/validators/validators';\n\n\nconst Dialogs = (props: DialogsPropsType) => {\n\tconst dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n\t// let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\n\tconst messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>);\n\t// let messagesElements = state.messages.map(m => <Message message={m.message}/>);\n\tconst newMessageBody = props.dialogsPage.newMessageBody;\n\n\tconst onNewMessage = (values: any) => {\n\t\tprops.sendMessage(values.newMessageBody);\n\t}\n\n\treturn (\n\t\t<div className={s.dialogs}>\n\t\t\t<div className={s.dialogsItems}>\n\t\t\t\t{dialogsElements}\n\n\t\t\t</div>\n\t\t\t<div className={s.messages}>\n\t\t\t\t<div>{messagesElements}</div>\n\t\t\t</div>\n\t\t\t<AddMessageFormRedux onSubmit={onNewMessage}/>\n\t\t</div>\n\t)\n}\n\ntype AddMessageFormPropsType = {\n\t// newMessageBody: string\n}\n\nconst maxLength50 = maxLengthCreator(50)\n\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormPropsType>> = (props) => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<div>\n\t\t\t\t<div><Field component={Textarea} name={'newMessageBody'} placeholder=\"Enter your message\" validate={[required, maxLength50]}/></div>\n\t\t\t\t<div>\n\t\t\t\t\t<button> Sent</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst AddMessageFormRedux = reduxForm<AddMessageFormPropsType>({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Dialogs;\n","import React, { ComponentType } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport { AppStateType } from '../redux/redux-store';\n\ntype MapStateToPropsForRedirectType = {\n\tisAuth: boolean\n}\n\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStateToPropsForRedirectType => {\n\treturn {\n\t\tisAuth: state.authData.isAuth\n\t}\n}\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n\tconst RedirectComponent = (props: MapStateToPropsForRedirectType) => {\n\t\tlet {isAuth, ...restProps} = props\n\t\tif (!isAuth) return <Redirect to=\"/login\"/>\n\t\treturn <Component {...restProps as T}/>\n\t}\n\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n\treturn ConnectedAuthRedirectComponent;\n}","import axios from 'axios';\nimport {PhotosType, PostItemType, ProfileInfoType, UserType} from '../types/types';\n\nconst instance = axios.create({\n\tbaseURL: `https://social-network.samuraijs.com/api/1.0/`,\n\twithCredentials: true,\n\theaders: {'API-KEY': '6587bf96-e19c-43d8-b7f7-8a779c2e9e9d'}\n})\n\nexport const usersAPI = {\n\tgetUsers: (currentPage: number, pageSize: number) => {\n\t\treturn instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}`)\n\t\t\t.then(response => response.data)\n\t},\n\tfollowUsers: (id: number) => {\n\t\treturn instance.post<APIResponseType>(`follow/${id}`,)\n\t\t\t.then(response => response.data.resultCode)\n\t},\n\tunfollowUsers: (id: number) => {\n\t\treturn instance.delete(`follow/${id}`,)\n\t\t\t.then(response => response.data.resultCode) \n\t},\n\t// getAuth: () => {\n\t// \tconsole.warn('use authAPI')\n\t// \treturn authAPI.getAuth()\n\t// },\n\tgetProfile: (userId: string) => {\n\t\tconsole.warn('Obsolete method. Please profileAPI object.')\n\t\treturn profileAPI.getProfile(userId);\n\t}\n}\n\nexport const authAPI = {\n\tme() {\n\t\treturn instance.get<APIResponseType<MeResponseDataType>>(`auth/me`)\n\t\t\t.then(res => res.data)\n\t},\n\tlogin(email: string, password: string, rememberMe: boolean = false, captcha: null | string = null) {\n\t\treturn instance.post<APIResponseType<LoginResponseDataType, ResultCodeCaptcha | ResultCodes>>(`auth/login`, {email, password, rememberMe, captcha})\n\t\t\t.then(res => res.data)\n\t},\n\tlogout() {\n\t\treturn instance.delete(`auth/login`,)\n\t\t\t.then(res => res.data)\n\t},\n}\n\nexport const profileAPI = {\n\tgetProfile: (userId: string) => {\n\t\treturn instance.get<ProfileInfoType>(`profile/${userId}`)\n\t\t\t.then(response => response.data)\n\t},\n\tgetStatus: (userId: string) => {\n\t\treturn instance.get<string>(`profile/status/${userId}`)\n\t},\n\tupdateStatus(newText: string) {\n\t\treturn instance.put<APIResponseType>(`profile/status/`, {status: newText})\n\t},\n\tsavePhoto(photoFile: File) {\n\t\tconst formData = new FormData()\n\t\tformData.append('image', photoFile)\n\t\treturn instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data'\n\t\t\t}\n\t\t}).then(res => res.data)\n\t},\n\n\tsaveProfile(profile: PostItemType) {\n\t\treturn instance.put<APIResponseType<PostItemType>>(`profile/`, profile)\n\t\t\t.then(res => res.data)\n\t},\n}\n\nexport type APIResponseType<D = {}, RC = ResultCodes> = {\n\tdata: D\n\tmessages: string[]\n\tresultCode: RC\n}\n\nexport enum ResultCodes {\n\tSuccess = 0,\n\tError = 1,\n}\n\nexport enum ResultCodeCaptcha {\n\tCaptchaIsRequired = 10\n}\n\nexport type GetItemsType = {\n\titems: UserType[]\n\ttotalCount: number\n\terror: string | null\n}\n\ntype MeResponseDataType = {\n\tid: number,\n\temail: string,\n\tlogin: string\n}\n\ntype LoginResponseDataType = {\n\tuserId: number\n}\ntype SavePhotoResponseDataType = {\n\tphotos: PhotosType\n}","import React from 'react';\nimport {initialStateType, sendMessageAC} from '../../redux/dialogsReducer';\nimport {connect} from 'react-redux';\nimport {AppDispatchType, AppStateType} from '../../redux/redux-store';\nimport Dialogs from './Dialogs';\nimport {withAuthRedirect} from '../../hok/witthAuthRedirect';\nimport {compose} from 'redux';\n\n\ntype MapStateToPropsType = {\n\tdialogsPage: initialStateType\n}\n\ntype MapDispatchToPropsType = {\n\tsendMessage: (newMessageBody: string) => void\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n\treturn {\n\t\tdialogsPage: state.dialogsPage, /*state.dialogsPage*/\n\t}\n}\nconst mapDispatchToProps = (dispatch: AppDispatchType): MapDispatchToPropsType => {\n\treturn {\n\t\tsendMessage: (newMessageBody: string) => {\n\t\t\tdispatch(sendMessageAC(newMessageBody))\n\t\t}\n\t}\n}\n\n// @ts-ignore\n// const DialogsContainer = withAuthRedirect (connect (mapStateToProps, mapDispatchToProps) (Dialogs));\n\nexport default compose<React.ComponentType>(\n\tconnect(mapStateToProps, mapDispatchToProps),\n\twithAuthRedirect\n)(Dialogs);\n\n","import {usersAPI} from '../api/api';\nimport {\n\tDispatchActionsType,\n\tFollowUserAT,\n\tSetCurrentPageAT,\n\tSetFollowingInProgress,\n\tsetIsFetchingAT,\n\tsetTotalUserCountAT,\n\tSetUsersAT,\n\tUnfollowUserAT\n} from '../types/dispatchTypes';\nimport {UsersPageDataType, UserType} from '../types/types';\nimport {AppDispatchType} from './redux-store';\n\nconst initialState = {\n\titems: [] as UserType[],\n\tpageSize: 10,\n\ttotalUsersCount: 0,\n\tcurrentPage: 555,\n\tisFetching: false,\n\tfollowingInProgress: [] as number[], //array of users id\n\tfilter: {\n\t\tterm: '',\n\t\tfriend: null as null | boolean\n\t}\n}\n\nexport type FilterType = typeof initialState.filter\n\n\nexport const usersReducer = (state: UsersPageDataType = initialState, action: DispatchActionsType): UsersPageDataType => {\n\tswitch (action.type) {\n\t\tcase 'FOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: state.items.map(u => u.id === action.userID ? {...u, followed: true} : u)\n\t\t\t}\n\t\tcase 'UNFOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: state.items.map(u => u.id === action.userID ? {...u, followed: false} : u)\n\t\t\t}\n\t\tcase 'SET-USERS':\n\t\t\treturn {...state, items: [...action.items]}\n\t\tcase 'SET-CURRENT-PAGE':\n\t\t\treturn {...state, currentPage: action.currentPage}\n\t\tcase 'SET-TOTAL-USER-COUNT':\n\t\t\treturn {...state, totalUsersCount: action.count}\n\t\tcase 'TOGGLE-IS-FETCHING':\n\t\t\treturn {...state, isFetching: action.isFetching}\n\t\tcase 'SET-FOLLOWING-IN-PROGRESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfollowingInProgress: action.isFetching\n\t\t\t\t\t? [...state.followingInProgress, action.userId]\n\t\t\t\t\t: state.followingInProgress.filter(id => id !== action.userId)\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const followUser = (userID: number): FollowUserAT => {\n\treturn {type: 'FOLLOW', userID}\n}\nexport const unfollowUser = (userID: number): UnfollowUserAT => {\n\treturn {type: 'UNFOLLOW', userID}\n}\nexport const setUsers = (items: UserType[]): SetUsersAT => {\n\treturn {type: 'SET-USERS', items}\n}\nexport const setCurrentPage = (currentPage: number): SetCurrentPageAT => {\n\treturn {type: 'SET-CURRENT-PAGE', currentPage}\n}\nexport const setTotalUserCount = (totalUsersCount: number): setTotalUserCountAT => {\n\treturn {type: 'SET-TOTAL-USER-COUNT', count: totalUsersCount}\n}\nexport const toggleIsFetching = (isFetching: boolean): setIsFetchingAT => {\n\treturn {type: 'TOGGLE-IS-FETCHING', isFetching}\n}\nexport const setFollowingInProgress = (isFetching: boolean, userId: number): SetFollowingInProgress => {\n\treturn {type: 'SET-FOLLOWING-IN-PROGRESS', isFetching, userId}\n}\n\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\n\treturn async (dispatch: AppDispatchType) => {\n\t\tdispatch(toggleIsFetching(true));\n\t\tdispatch(setCurrentPage(currentPage));\n\t\tlet data = await usersAPI.getUsers(currentPage, pageSize);\n\t\tdispatch(toggleIsFetching(false));\n\t\tdispatch(setUsers(data.items));\n\t\tdispatch(setTotalUserCount(data.totalCount));\n\t}\n}\nexport const followUserThunkCreator = (userId: number) => (dispatch: AppDispatchType) => {\n\tdispatch(setFollowingInProgress(true, userId))\n\tusersAPI.followUsers(userId)\n\t\t.then(response => {\n\t\t\tif (response === 0) {\n\t\t\t\tdispatch(followUser(userId))\n\t\t\t}\n\t\t\tdispatch(setFollowingInProgress(false, userId))\n\t\t})\n}\nexport const unfollowUserThunkCreator = (userId: number) => (dispatch: AppDispatchType) => {\n\tdispatch(setFollowingInProgress(true, userId))\n\tusersAPI.unfollowUsers(userId)\n\t\t.then(response => {\n\t\t\tif (response === 0) {\n\t\t\t\tdispatch(unfollowUser(userId))\n\t\t\t}\n\t\t\tdispatch(setFollowingInProgress(false, userId))\n\t\t})\n}\n","export default __webpack_public_path__ + \"static/media/user.a603a401.png\";","import React from 'react';\nimport styles from './Users.module.css'\nimport {UserType} from '../../types/types';\nimport userPhoto from '../../assets/images/user.png'\nimport {NavLink} from 'react-router-dom';\n\ntype UsersPropsType = {\n\ttotalUsersCount: number\n\tpageSize: number\n\tcurrentPage: number\n\titems: UserType[]\n\tfollowingInProgress: number[]\n\tonPageChange: (pegeNumber: number) => void\n\tfollowUser: (userID: number) => void\n\tunfollowUser: (userID: number) => void\n}\n\nexport const Users = (props: UsersPropsType) => {\n\tconst pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n\n\tconst pages = [];\n\tfor (let i = 1; i <= pagesCount; i++) {\n\t\tpages.push(i)\n\t}\n\n\tlet pagesView: number[] = []\n\tif (props.currentPage === 1) {\n\t\tpagesView = pages.filter(p => p < 10)\n\t\tpagesView.push(pages.length)\n\t} else if (props.currentPage === pages.length) {\n\t\tpagesView.push(1)\n\t\tpagesView = [...pagesView, ...pages.filter(p => p > props.currentPage - 9)]\n\t} else if (props.currentPage > pages.length - 9) {\n\t\tpagesView.push(1)\n\t\tlet lowRange = props.currentPage - 4\n\t\tlet highRange = props.currentPage + 5\n\t\tpagesView = [...pagesView, ...pages.filter(p => p > lowRange && p < highRange)]\n\t\tpagesView.push(pages.length)\n\t} else {\n\t\tpagesView.push(1)\n\t\tlet lowRange = props.currentPage - 4\n\t\tlet highRange = props.currentPage + 5\n\t\tpagesView = [...pagesView, ...pages.filter(p => p > lowRange && p < highRange)]\n\t}\n\n\treturn <div>\n\t\t<div className={styles.pages}>\n\t\t\t{pages.map(p => {\n\t\t\t\treturn <span\n\t\t\t\t\tclassName={props.currentPage === p ? styles.selectedPage : ''}\n\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\tprops.onPageChange(p)\n\t\t\t\t\t}}>{p}</span>\n\t\t\t})}\n\n\t\t</div>\n\t\t{props.items.map(u => <div key={u.id} className={styles.body}>\n                <span>\n                    <div>\n\t\t\t\t\t\t<NavLink to={'/profile/' + u.id}>\n\t\t\t\t\t\t\t<img src={u.photos.small != null ? u.photos.small : userPhoto} alt=\"avatar\"\n\t\t\t\t\t\t\t\t className={styles.photo}/>\n\t\t\t\t\t\t</NavLink>\n                    </div>\n                    <div>{u.followed\n\t\t\t\t\t\t? <button disabled={props.followingInProgress.some(id => id === u.id)}\n\t\t\t\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t\t\t\t  props.unfollowUser(u.id)\n\t\t\t\t\t\t\t\t  }} className={styles.btn}>Unfollow</button>\n\t\t\t\t\t\t: <button disabled={props.followingInProgress.some(id => id === u.id)}\n\t\t\t\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t\t\t\t  props.followUser(u.id)\n\t\t\t\t\t\t\t\t  }} className={styles.btn}>Follow</button>}</div>\n                </span>\n\t\t\t<span className={styles.cont}>\n                    <span>\n                        <div>{u.name}</div>\n                        <div>{u.status}</div>\n                    </span>\n                    <span>\n                        <div>{'u.location.country'}</div>\n                        <div>{'u.location.city'}</div>\n                    </span>\n                </span>\n\t\t</div>)}\n\t</div>\n}\n","export default __webpack_public_path__ + \"static/media/preloader.464a6fda.gif\";","import React from 'react';\nimport loader from '../../assets/images/preloader.gif';\nimport s from '../../components/Users/Users.module.css';\n\nexport const Preloader: React.FC = () => {\n\treturn <div><img src={loader} className={s.imgs} alt=\"preloader\"/></div>\n}","import React from 'react';\nimport {AppStateType} from '../../redux/redux-store';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {\n\tfollowUser,\n\tsetCurrentPage,\n\tsetTotalUserCount,\n\tsetUsers,\n\ttoggleIsFetching,\n\tunfollowUser,\n\tgetUsersThunkCreator,\n\tfollowUserThunkCreator,\n\tunfollowUserThunkCreator,\n} from '../../redux/usersReducer';\nimport {Users} from './Users';\nimport {Preloader} from '../../common/Preloader/Preloader';\nimport {withAuthRedirect} from '../../hok/witthAuthRedirect';\nimport {compose} from 'redux';\n\n\n// @ts-ignore\nexport class UsersContainer extends React.Component<UsersContainerProps> {\n\n\tcomponentDidMount() {\n\t\tthis.props.getUsersThunkCreator(this.props.usersPageData.currentPage, this.props.usersPageData.pageSize);\n\t}\n\n\tonPageChange = (currentPage: number) => {\n\t\tthis.props.getUsersThunkCreator(currentPage, this.props.usersPageData.pageSize)\n\t}\n\n\trender() {\n\t\treturn <>\n\t\t\t{this.props.usersPageData.isFetching ? <Preloader/> : null}\n\t\t\t<Users\n\t\t\t\tfollowUser={this.props.followUserThunkCreator}\n\t\t\t\tunfollowUser={this.props.unfollowUserThunkCreator}\n\t\t\t\titems={this.props.usersPageData.items}\n\t\t\t\tfollowingInProgress={this.props.usersPageData.followingInProgress}\n\t\t\t\tonPageChange={this.onPageChange}\n\t\t\t\ttotalUsersCount={this.props.usersPageData.totalUsersCount}\n\t\t\t\tpageSize={this.props.usersPageData.pageSize}\n\t\t\t\tcurrentPage={this.props.usersPageData.currentPage}\n\t\t\t/>\n\t\t</>\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tusersPageData: state.usersPageData,\n\t}\n}\n\nexport default compose<React.ComponentType>(\n\t// withAuthRedirect,\n\tconnect(mapStateToProps, {\n\t\tfollowUser,\n\t\tunfollowUser,\n\t\tsetCurrentPage,\n\t\tgetUsersThunkCreator,\n\t\tfollowUserThunkCreator,\n\t\tunfollowUserThunkCreator,\n\t})\n)(UsersContainer)","import {AuthType} from '../types/types';\nimport {DispatchActionsType, SetUserDataAT} from '../types/dispatchTypes';\nimport {AppDispatchType, AppStateType, BaseThunkType, InferActionsTypes} from './redux-store';\nimport {authAPI, usersAPI} from '../api/api';\nimport {ThunkDispatch} from 'redux-thunk';\nimport {FormAction, stopSubmit} from 'redux-form';\n\nlet initialState = {\n\tid: null as (number | null),\n\temail: null as string | null,\n\tlogin: null as string | null,\n\tisAuth: false,\n\tcaptchaUrl: null as string | null\n}\nexport type AuthInitStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType>\n\nexport const authReducer = (state: AuthInitStateType = initialState, action: ActionsType): AuthInitStateType => {\n\tswitch (action.type) {\n\t\tcase 'SN/AUTH/SET-USER-DATA':\n\t\tcase 'SN/AUTH/GET-CAPTCHA-URL':\n\t\t\treturn {\n\t\t\t\t...state, ...action.payload\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const actions = {\n\tsetUserData: (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\n\t\ttype: 'SN/AUTH/SET-USER-DATA',\n\t\tpayload: {id, email, login, isAuth},\n\t} as const),\n\tgetCaptchaUrlSuccess: (captchaUrl: string) => ({\n\t\ttype: 'SN/AUTH/GET-CAPTCHA-URL',\n\t\tpayload: {captchaUrl},\n\t} as const)\n}\n\nexport const getAuthUserData = (): ThunkType => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\n\treturn await authAPI.me()\n\t\t.then(response => {\n\t\t\tif (response.resultCode === 0) {\n\t\t\t\tlet {id, login, email} = response.data\n\t\t\t\tdispatch(actions.setUserData(id, login, email, true))\n\t\t\t}\n\t\t});\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: null | string = null): ThunkType => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType | FormAction>) => {\n\tawait authAPI.login(email, password, rememberMe, captcha)\n\t\t.then(response => {\n\t\t\tif (response.resultCode === 0) {\n\t\t\t\tdispatch(getAuthUserData())\n\t\t\t}else {\n\t\t\t\tconst message = response.messages.length > 0 ? response.messages[0] : 'Some error';\n\t\t\t\tdispatch(stopSubmit('login', {_error: message}))\n\t\t\t}\n\t\t});\n}\n\nexport const logout = (): ThunkType => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\n\tawait authAPI.logout()\n\t\t.then(response => {\n\t\t\tif (response.resultCode === 0) {\n\t\t\t\tdispatch(actions.setUserData(null, null, null, false))\n\t\t\t}\n\t\t})\n\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.css';\n\nexport default Header;\n\n\ntype HeaderPropsType = {\n\tisAuth: boolean,\n\tlogin: string | null,\n\tlogout: () => void\n}\n\nfunction Header(props: HeaderPropsType) {\n\treturn <header className={s.header}>\n\t\t\t<div>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR_-I86af1RynC0u9KgHKUD-H6tCwT_Cf_P2Q&usqp=CAU\"/>\n\t\t\t</div>\n\t\t\t<div className={s.loginBlock}>\n\t\t\t\t{props.isAuth\n\t\t\t\t\t? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\n\t\t\t\t\t: <NavLink to={'/login'}>Login</NavLink> }\n\t\t\t</div>\n\t\t</header>\n\n}","import React from 'react';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport {AppStateType} from '../../redux/redux-store';\nimport s from './Header.module.css';\nimport {logout} from '../../redux/authReducer';\nimport {usersAPI} from '../../api/api';\nimport Header from './Header';\nimport {AuthType} from '../../types/types';\nimport axios from 'axios';\n\n\nclass HeaderClassComponent extends React.Component<HeaderContainerProps> {\n\n\n\n\trender() {\n\t\treturn <Header login={this.props.login}\n\t\t\t\t\t   isAuth={this.props.isAuth}\n\t\t\t\t\t   logout={this.props.logout}/>\n\t}\n}\n\ntype MapStateType = {\n\tisAuth: boolean\n\tlogin: string | null\n}\n\ntype MapDispatchType = {\n\t// getAuthUserData: () => void\n\tlogout: () => void\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateType => ({isAuth: state.authData.isAuth, login: state.authData.login})\n\nconst connector = connect<MapStateType, MapDispatchType,{},AppStateType>(mapStateToProps, {logout});\ntype HeaderContainerProps = ConnectedProps<typeof connector>;\nexport const HeaderContainer = connector(HeaderClassComponent);","import React, {ChangeEvent} from 'react';\nimport s from './ProfileInfo.module.css';\n\ntype ProfileStatusPropsType = {\n\tstatus: string\n\tupdateStatus: (text: string) => void\n}\n\nclass ProfileStatus extends React.Component<ProfileStatusPropsType> {\n\n\tstate = {\n\t\teditMode: false,\n\t\tstatus: this.props.status\n\t}\n\n\tactivateEditMode = () => {\n\t\tthis.setState({\n\t\t\teditMode: true\n\t\t});\n\t}\n\n\tdeactivateEditMode = () => {\n\t\tthis.setState({\n\t\t\teditMode: false\n\t\t});\n\t\tthis.props.updateStatus(this.state.status)\n\t}\n\n\tonStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tthis.setState({\n\t\t\tstatus: e.currentTarget.value\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{ editMode: boolean, status: string }>) {\n\t\tif (prevProps.status !== this.props.status) {\n\t\t\tthis.setState({\n\t\t\t\tstatus: this.props.status\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tthis.state.editMode\n\t\t\t\t\t\t? <input\n\t\t\t\t\t\t\tvalue={this.state.status}\n\t\t\t\t\t\t\tonChange={this.onStatusChange}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonBlur={this.deactivateEditMode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t: <span className={s.statusBlock} onDoubleClick={this.activateEditMode}>\n                            {this.props.status}\n                        </span>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default ProfileStatus;\n","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport {ProfileInfoType} from '../../../types/types';\nimport userPhoto from '../../../assets/images/user.png'\nimport ProfileStatus from './ProfileStatus'\nimport {Preloader} from '../../../common/Preloader/Preloader';\n\ntype ProfileInfoPropsType = {\n\tprofile: ProfileInfoType | null\n\tstatus: string\n\tupdateStatus: (text: string) => void\n}\n\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\n\n\tif (!props.profile) {\n\t\treturn <Preloader/>\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={s.descriptionBlock}>\n\t\t\t\t\t<img src={props.profile?.photos.large ? props.profile.photos.large : userPhoto}/>\n\t\t\t\t\t<ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>{props.profile?.fullName}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>{props.profile?.lookingForAJob ? 'Looking for a job -> ' : null}</span>\n\t\t\t\t\t\t<span>{props.profile?.lookingForAJobDescription}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>{props.profile?.contacts.facebook} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.github} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.vk} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.instagram} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.twitter} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.website} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.youtube} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.mainLink} </span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default ProfileInfo;\n","import React from 'react';\nimport s from './Post.module.css';\n\nexport type PostPropsType = {\n    message: string\n    likesCount: number\n}\n\nconst Post = (props: PostPropsType) => {\n    return (\n        <div className={`${s.item} ${s.active}`}>\n            <img src='https://i.guim.co.uk/img/media/bf7e98bd289d189e5b86d3f406f740368c663a6a/85_0_2544_1527/master/2544.jpg?width=1200&height=1200&quality=85&auto=format&fit=crop&s=98cd2e37e0df5d552473c329d88349ee'/>\n            {props.message}\n            <div>\n                <span>like: {props.likesCount}</span>\n            </div>\n        </div>\n    )\n}\nexport default Post;\n","import {PostItemType, ProfileInfoType, ProfilePageDataType} from '../types/types';\nimport {DispatchActionsType, SetProfileStatusAT, SetUserProfileAT} from '../types/dispatchTypes';\nimport {AppDispatchType} from './redux-store';\nimport {profileAPI, usersAPI} from '../api/api';\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\n\nlet initialState = {\n\tpostsData: [\n\t\t{id: 1, message: 'Hi, how are you', likesCount: 12},\n\t\t{id: 2, message: 'It\\'s my first post', likesCount: 15},\n\t\t{id: 3, message: 'yo yo yo', likesCount: 17},\n\t] as Array<PostItemType>,\n\t// newPostText: 'it-kamasutra.com',\n\tprofile: null,\n\tstatus: ''\n};\n\nexport type initialStateType = typeof initialState\n\n// const profileReducer = (state: initialStateType = initialState, action: ActionsTypes): initialStateType => {\nconst profileReducer = (state: ProfilePageDataType = initialState, action: DispatchActionsType) => {\n\tswitch (action.type) {\n\t\tcase 'ADD-POST': { // block structure so we can name stateCopy with same name in all cases\n\t\t\tconst newPost: PostItemType = {\n\t\t\t\tid: 5,\n\t\t\t\tmessage: action.newPostText,\n\t\t\t\tlikesCount: 0\n\t\t\t};\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpostsData: [newPost, ...state.postsData],\n\t\t\t\tnewPostText: ''\n\t\t\t}\n\n\t\t}\n\t\tcase 'SET-USER-PROFILE': {\n\t\t\treturn {...state, profile: action.profileInfo}\n\t\t}\n\n\t\tcase 'SET-STATUS': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: action.status\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const addPostAC = (newPostText: string) => {\n\treturn {\n\t\ttype: ADD_POST,\n\t\tnewPostText: newPostText\n\t} as const\n}\nconst setUserProfile = (profile: ProfileInfoType): SetUserProfileAT => {\n\treturn {\n\t\ttype: 'SET-USER-PROFILE',\n\t\tprofileInfo: profile\n\t} as const\n}\nconst setStatus = (status: string): SetProfileStatusAT => {\n\treturn {\n\t\ttype: SET_STATUS,\n\t\tstatus: status\n\t} as const\n}\n\nexport const getUserProfileTC = (id: string) => (dispatch: AppDispatchType) => {\n\tlet userId: string;\n\tid ? userId = id : userId = '17771';\n\tprofileAPI.getProfile(userId)\n\t\t.then(response => {\n\t\t\tdispatch(setUserProfile(response))\n\t\t});\n}\n\nexport const getStatusTC = (id: string) => (dispatch: AppDispatchType) => {\n\tlet userId: string;\n\tid ? userId = id : userId = '17771';\n\tprofileAPI.getStatus(userId)\n\t\t.then(response => {\n\t\t\tdispatch(setStatus(response.data))\n\t\t});\n}\n\nexport const updateStatusTC = (statusText: string) => (dispatch: AppDispatchType) => {\n\tprofileAPI.updateStatus(statusText)\n\t\t.then(response => {\n\t\t\tif (response.data.resultCode === 0) {\n\t\t\t\tdispatch(setStatus(statusText))\n\t\t\t}\n\t\t})\n}\n\nexport default profileReducer;","import React, {ChangeEvent} from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post'\nimport {addPostAC} from '../../../redux/profileReducer';\nimport {AppDispatchType, AppStateType} from '../../../redux/redux-store';\nimport {connect} from 'react-redux';\nimport {MapDispatchToPropsType, MapStateToPropsType, MyPostType} from './types';\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\nimport {maxLengthCreator, minLengthCreator, required} from '../../../utils/validators/validators';\nimport {Textarea} from '../../../common/Preloader/FormsControls/FormControls';\n\nconst MyPosts = (props: MyPostType) => {\n\tconst postElements = props.postsData.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\n\n\tconst newPostElement = React.createRef<HTMLTextAreaElement>();\n\t// const addPost = () => {   /*добавляет пост*/\n\t// \tif (newPostElement.current) {\n\t// \t\tprops.addPost('');\n\t/*props.updateNewPostText('')*/ /*очищает поле ввода после добавления поста*/\n\t// }\n\t// }\n\t// const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n\t// \tprops.onPostChange(e.currentTarget?.value);\n\t// let text = e.currentTarget?.value;\n\t// }\n\t//     обработчик принимает событие event\n\t//     типизируем event - ChangeEvent - внутри типизируем на какой элемент событие прилетает\n\t//     в данном случае событие прилетает на HTMLTextAreaElement\n\n\tconst onNewPost = (values: any) => {\n\t\tprops.addPost(values.newPostText)\n\t}\n\treturn (\n\t\t<div className={s.postsBlock}>\n\t\t\t{/*{props.postsData[1].message}*/}\n\t\t\t<h3>My posts</h3>\n\t\t\t<div>\n\t\t\t\t<AddMyPostFormRedux onSubmit={onNewPost}/>\n\t\t\t</div>\n\t\t\t<div className={s.posts}>\n\t\t\t\t{postElements}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst maxLength10 = maxLengthCreator(10)\nconst minLength2 = minLengthCreator(2)\n\n\ntype AddMyPostFormPropsType = {}\n\nconst AddMyPostForm: React.FC<InjectedFormProps<AddMyPostFormPropsType>> = (props) => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<div>\n\t\t\t\t<Field component={Textarea} name={'newPostText'} placeholder={'Add posts'}\n\t\t\t\t\t   validate={[required, maxLength10, minLength2]}/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button>Add post</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst AddMyPostFormRedux = reduxForm<AddMyPostFormPropsType>({form: 'ProfileAddMyPostForm'})(AddMyPostForm)\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n\t// no debugger\n\tpostsData: state.profilePage.postsData,\n\t// newPostText: state.profilePage.newPostText,\n\tprofile: state.profilePage.profile\n})\nconst mapDispatchToProps = (dispatch: AppDispatchType): MapDispatchToPropsType => {\n\t// yes debugger\n\treturn {\n\t\taddPost: (newPostText: string) => {\n\t\t\tdispatch(addPostAC(newPostText))\n\t\t},\n\t}\n}\n\nexport const MyPostsContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(\n\tmapStateToProps, mapDispatchToProps\n)(MyPosts)\n","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport {MyPostsContainer} from './MyPosts/MyPosts';\nimport {ProfileInfoType} from '../../types/types';\n\ntype ProfilePropsType = {\n\tprofile: ProfileInfoType | null\n\tstatus: string\n\tupdateStatus: (text: string) => void\n}\n\nfunction Profile(props: ProfilePropsType) {\n\n\treturn (\n\t\t<div className={s.content}>\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n\t\t\t<MyPostsContainer/>\n\t\t</div>\n\t)\n}\n\nexport default Profile;\n","import React from 'react';\nimport Profile from './Profile';\nimport {ProfileInfoType, ProfilePageDataType} from '../../types/types';\nimport axios from 'axios';\nimport {AppStateType} from '../../redux/redux-store';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router-dom';\nimport {getUserProfileTC, getStatusTC, updateStatusTC} from '../../redux/profileReducer'\nimport {usersAPI} from '../../api/api';\nimport {withAuthRedirect} from '../../hok/witthAuthRedirect';\nimport {compose} from 'redux';\n\nclass ProfileContainer extends React.Component<ProfileContainerWithRoutePropsType> {\n\n\tupdateProfile() {\n\t\tlet id = +this.props.match.params.userId\n\t\tlet userId: number | null = id ? id : this.props.authorizedUserId\n\t\tif (!userId) {\n\t\t\t//todo:replace push redirect\n\t\t\tthis.props.history.push('/login')\n\t\t}\n\t\tthis.props.getUserProfileTC(this.props.match.params.userId)\n\t\tthis.props.getStatusTC(this.props.match.params.userId)\n\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateProfile()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Profile profile={this.props.profile}\n\t\t\t\t\t\t status={this.props.status}\n\t\t\t\t\t\t updateStatus={this.props.updateStatusTC}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\ntype MapDispatchType = {\n\tgetUserProfileData: (userId: number) => void\n\tgetStatusFromUser: (userId: number) => void\n\tupdateOwnProfileStatus: (status: string) => void\n\tsavePhoto: (photo: File) => void\n\tsaveProfileData: (profile: ProfileInfoType) => void\n}\ntype MapStateType = {\n\tprofile: ProfileInfoType | null\n\tstatus: string\n\tauthorizedUserId: number | null\n\tisAuth: boolean\n}\n\nlet mapStateToProps = (state: AppStateType): MapStateType => {\n\treturn {\n\t\tprofile: state.profilePage.profile,\n\t\tstatus: state.profilePage.status,\n\t\tauthorizedUserId: state.authData.id,\n\t\tisAuth: state.authData.isAuth\n\t}\n}\n\nconst connector = connect(mapStateToProps, {getUserProfileTC, getStatusTC, updateStatusTC});\ntype ProfileContainerProps = ConnectedProps<typeof connector>;\ntype PathParamsType = { userId: string };\ntype ProfileContainerWithRoutePropsType = RouteComponentProps<PathParamsType> & ProfileContainerProps;\n\nexport default compose<React.ComponentType>(\n\tconnector,\n\twithRouter,\n\twithAuthRedirect\n)(ProfileContainer)\n","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\nimport s from './Login.module.scss'\nimport {Checkbox, Input} from '../../common/Preloader/FormsControls/FormControls';\nimport {required} from '../../utils/validators/validators';\nimport {useDispatch, useSelector, connect} from 'react-redux';\nimport {AppStateType} from '../../redux/redux-store';\nimport {Redirect} from 'react-router-dom';\nimport {path} from '../../App';\nimport {login} from '../../redux/authReducer';\n\ntype FormDataType = {\n\tlogin: string\n\tpassword: string\n\trememberMe: boolean\n}\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType,\n\tLoginFormOwnProps> & LoginFormOwnProps> = ({\n\thandleSubmit,\n\terror,\n\tcaptchaUrl\n}) => {\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={s.form}>\n\n\t\t\t<div className={s.testData}>\n\t\t\t\t<p>Use test data</p>\n\t\t\t\t<p>Email: free@samuraijs.com</p>\n\t\t\t\t<p>Password: free</p>\n\t\t\t</div>\n\t\t\t<div className={s.inputWrapper}>\n\t\t\t\t<Field placeholder={'Email'} name={'email'} component={Input} validate={[required]}/>\n\t\t\t</div>\n\t\t\t<div className={s.inputWrapper}>\n\t\t\t\t<Field placeholder={'Password'} name={'password'} type={'password'} component={Input}\n\t\t\t\t\t   validate={[required]}/>\n\t\t\t</div>\n\t\t\t<div className={s.checkboxWrapper}>\n\t\t\t\t<Field type={'checkbox'} name={'rememberMe'} component={Checkbox}/> remember me\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button className={s.loginBtn}>Login</button>\n\t\t\t</div>\n\t\t\t{error && <div className={s.formSummaryError}>{error}</div>}\n\t\t\t<div>\n\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm)\n\ntype LoginFormOwnProps = {\n\tcaptchaUrl: string | null\n}\n\ntype LoginFormValuesType = {\n\tcaptcha: string | null //this type name have to match with field name 'captcha'\n\temail: string\n\tpassword: string\n\trememberMe: boolean\n}\n\nexport const LoginPage: React.FC = () => {\n\n\tconst captchaUrl = useSelector((state: AppStateType) => state.authData.captchaUrl)\n\tconst isAuth = useSelector((state: AppStateType) => state.authData.isAuth)\n\tconst dispatch = useDispatch()\n\n\n\tconst onSubmit = (formData: LoginFormValuesType) => {\n\t\tdispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\n\t}\n\n\tif (isAuth) {\n\t\treturn <Redirect to={path.PROFILE}/>\n\t}\n\n\treturn (\n\t\t<div className={s.header}>\n\t\t\t<div className={s.singIn}>\n\t\t\t\t<h1 className={s.pageName}>Login</h1>\n\t\t\t\t<LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\n\t\t\t</div>\n\t\t</div>\n\n\t)\n}\n// export default connect(null, {login})(login);","import {ThunkAction, ThunkDispatch} from 'redux-thunk'\nimport {getAuthUserData} from './authReducer'\nimport {AppStateType, InferActionsTypes} from './redux-store';\n\nlet initializeState = {\n\tinitialized: false\n}\n\nexport type AppInitStateType = typeof initializeState\ntype ActionsType = InferActionsTypes<typeof actions>\n\nexport const appReducer = (state: AppInitStateType = initializeState, action: ActionsType): AppInitStateType => {\n\tswitch (action.type) {\n\t\tcase 'SN/APP/INITIALIZED_SUCCESS':\n\t\t\treturn {...state, initialized: true}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\n//Action\nexport const actions = {\n\tinitializedSuccess:() => ({\n\t\ttype: 'SN/APP/INITIALIZED_SUCCESS',\n\t} as const)\n}\n\n//Thunk\nexport const initializeApp = (): ThunkType =>\n\t(dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\n\t\tlet promise = dispatch(getAuthUserData())\n\t\tPromise.all([promise])\n\t\t\t.then(() => {\n\t\t\t\tdispatch(actions.initializedSuccess)\n\t\t\t})\n\t}\n\n//Type\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>","import React, { ComponentType } from 'react';\nimport {Route, withRouter} from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Setting from './components/Setting/Setting';\nimport Friends from './components/Navbar/Friends/Friends';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport {HeaderContainer} from './components/Header/HeaderContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport {LoginPage} from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport {initializeApp} from './redux/appReducer';\nimport { compose } from 'redux';\nimport { AppStateType } from './redux/redux-store';\nimport { Preloader } from './common/Preloader/Preloader';\n\nexport const path = {\n\tPROFILE: '/profile',\n\tDIALOGS: '/dialogs',\n\tCHAT: '/chat',\n\tDEVELOPERS: '/developers',\n\tLOGIN: '/login',\n}\nexport type AppPropsType = MapDispatchType & MapStateType\n\nclass App extends React.Component<AppPropsType> {\n\n\tcomponentDidMount() {\n\t\tthis.props.initializeApp()\n\t}\n\n\trender() {\n\t\t// const state = props.store.getState()\n\t\tif(this.props.initialized) {\n\t\t\treturn <Preloader/>\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"app-wrapper\">\n\t\t\t\t<HeaderContainer/>\n\t\t\t\t<Navbar/>\n\t\t\t\t<div className={'app-wrapper-content'}>\n\t\t\t\t\t<Route path={'/dialogs'}\n\t\t\t\t\t\t   render={() => <DialogsContainer/>}/>\n\t\t\t\t\t<Route path={'/profile/:userId?'}\n\t\t\t\t\t\t   render={() => <ProfileContainer/>}/>\n\t\t\t\t\t<Route path={'/users'}\n\t\t\t\t\t\t   render={() => <UsersContainer/>}/>\n\t\t\t\t\t<Route path={'/login'}\n\t\t\t\t\t\t   render={() => <LoginPage/>}/>\n\t\t\t\t\t<Route path={'/news'} render={() => <News/>}/>\n\t\t\t\t\t<Route path={'/music'} render={() => <Music/>}/>\n\t\t\t\t\t<Route path={'/setting'} render={() => <Setting/>}/>\n\t\t\t\t\t<Route path={'/friends'} render={() => <Friends/>}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\ntype MapDispatchType = {\n\tinitializeApp: () => void\n\t// logout: () => void\n}\ntype MapStateType = {\n\tinitialized: boolean\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateType => ({\n\tinitialized: state.app.initialized\n})\n\nexport default compose<ComponentType>(withRouter, connect<MapStateType, MapDispatchType,{},AppStateType>(mapStateToProps, {initializeApp}))(App);\n","import {SitebarType} from '../types/types';\nimport {ActionsTypes, DispatchActionsType} from '../types/dispatchTypes';\n\n\nlet initialState = {\n    friends: [\n        {id: 1, name: 'Andrey'},\n        {id: 2, name: 'Sasha'},\n        {id: 3, name: 'Viktor'},\n    ],\n    icon: [\n        {id: 1, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_4.jpg'},\n        {id: 2, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_1.jpg'},\n        {id: 3, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_2.jpg'},\n        {id: 4, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_3.jpg'},\n    ]\n};\n\nconst sidebarReducer = (state: SitebarType = initialState, action: DispatchActionsType) => {\n\n    return state;\n}\n\nexport default sidebarReducer;\n","import {Action, applyMiddleware, combineReducers, createStore} from 'redux';\nimport profileReducer from './profileReducer';\nimport dialogsReducer from './dialogsReducer';\nimport sidebarReducer from './sidebarReducer';\nimport {usersReducer} from './usersReducer';\nimport {authReducer} from './authReducer';\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form'\nimport { appReducer } from './appReducer';\n\nexport const rootReducer = combineReducers({\n\tprofilePage: profileReducer,\n\tdialogsPage: dialogsReducer,\n\tsidebarReducer: sidebarReducer,\n\tusersPageData: usersReducer,\n\tauthData: authReducer,\n\tapp: appReducer,\n\tform: formReducer,\n})\n\n\nexport type AppStateType = ReturnType<typeof store.getState>;\nexport type AppDispatchType = typeof store.dispatch;\nexport type StoreType = typeof store;\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\nexport default store;\n\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\nexport type InferActionsTypes<T extends { [key: string]: (...args: any) => any }> = ReturnType<PropertiesTypes<T>>\n\n//Thunk...\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\n\n//@ts-ignore\nwindow.store = store\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport store, {rootReducer} from './redux/redux-store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter >\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n// function rerenderEntireTree() {\n//\n// }\n\n// rerenderEntireTree();\n// store.subscribe(rerenderEntireTree);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Users_body__3g2q8\",\"pages\":\"Users_pages__2ZPtK\",\"photo\":\"Users_photo__2hOPg\",\"cont\":\"Users_cont__3AYXt\",\"btn\":\"Users_btn__9AIH5\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"imgs\":\"Users_imgs__2XvSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__yaG1v\",\"childrenWrapperStyle\":\"FormsControl_childrenWrapperStyle__52jtV\",\"error\":\"FormsControl_error__30ipB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"profileImage\":\"ProfileInfo_profileImage__V_r63\",\"statusBlock\":\"ProfileInfo_statusBlock__3HLvc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"active\":\"Post_active__1HCRI\"};"],"sourceRoot":""}