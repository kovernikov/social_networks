{"version":3,"sources":["components/Dialogs/Dialog.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Setting.tsx","components/Navbar/Friends/Friends.tsx","redux/dialogsReducer.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","api/api.ts","redux/usersReducer.ts","assets/images/user.png","components/Users/Users.tsx","assets/images/preloader.gif","common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","redux/profileReducer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","redux/authReducer.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","App.tsx","redux/sidebarReducer.tsx","redux/redux-store.tsx","index.tsx"],"names":["module","exports","Navbar","prpps","className","s","nav","item","to","activeClassName","activelink","News","Music","Setting","MyFriends","props","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageBody","dialogsReducer","state","action","type","body","Message","dialog","DialogItem","path","active","Dialogs","dialogsElements","dialogsPage","map","d","messagesElements","m","dialogsItems","value","onChange","e","target","updateNewMessageBody","placeholder","onClick","sendMessage","DialogsContainer","connect","dispatch","updateNewMessageBodyAC","instance","axios","create","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","then","response","data","post","resultCode","delete","items","totalUsersCount","isFetching","followingInProgress","followUser","userID","unfollowUser","setCurrentPage","toggleIsFetching","setFollowingInProgress","userId","Users","pagesCount","Math","ceil","pages","i","push","pagesView","filter","p","length","lowRange","highRange","styles","selectedPage","event","onPageChange","u","src","photos","small","userPhoto","alt","photo","followed","disabled","some","btn","cont","uniqueUrlName","Preloader","loader","imgs","UsersAPIClassComponent","getUsersThunkCreator","usersPageData","this","followUserThunkCreator","unfollowUserThunkCreator","React","Component","UsersContainer","a","count","totalCount","connector","ProfileInfo","profileImage","descriptionBlock","profile","large","fullName","lookingForAJob","lookingForAJobDescription","contacts","facebook","github","vk","instagram","twitter","website","youtube","mainLink","Post","likesCount","postsData","newPostText","profileReducer","newText","newPost","trim","profileInfo","MyPostsContainer","profilePage","addPost","addPostAC","onPostChange","text","postElements","newPostElement","createRef","postsBlock","currentTarget","ref","current","posts","Profile","content","ProfileContainerClass","match","params","setUserProfile","ProfileContainer","withRouter","NaN","login","email","isAuth","fieldsErrors","Header","header","loginBlock","HeaderClassComponent","setAuthUserData","HeaderContainer","authData","App","render","Friends","friends","icon","img","sidebarReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86a0299f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__2nWS6\",\"dialogsItems\":\"Dialog_dialogsItems__1Ylnr\",\"active\":\"Dialog_active__24gaD\",\"dialog\":\"Dialog_dialog__3bJrQ\",\"messages\":\"Dialog_messages__19Bic\",\"message\":\"Dialog_message__1YXnE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Users_body__3g2q8\",\"pages\":\"Users_pages__2ZPtK\",\"photo\":\"Users_photo__2hOPg\",\"cont\":\"Users_cont__3AYXt\",\"btn\":\"Users_btn__9AIH5\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"imgs\":\"Users_imgs__2XvSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"profileImage\":\"ProfileInfo_profileImage__V_r63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"active\":\"Post_active__1HCRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activelink\":\"Navbar_activelink__2l0ss\"};","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from 'react-router-dom';\n\nexport type SitebarTypeProps = {\n    // appState: StateType\n}\n\nconst Navbar: React.FC<SitebarTypeProps> = (prpps) => {\n    return (\n        (\n            <nav className={s.nav}>\n\n                <div className={s.item}>\n                    <NavLink to=\"/profile\" activeClassName={s.activelink}> Profile </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/dialogs\" activeClassName={s.activelink}> Messages </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/users\" activeClassName={s.activelink}> Users </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/news\" activeClassName={s.activelink}> News </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/music\" activeClassName={s.activelink}> Music </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/setting\" activeClassName={s.activelink}> Settings </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/friends\" activeClassName={s.activelink}> Friends </NavLink>\n                </div>\n\n            </nav>\n        )\n    )\n}\nexport default Navbar;\n","import React from \"react\";\nimport s from './News.module.css'\n\nconst News = () => {\n    return (\n        <div>\n            NEWS\n        </div>\n    )\n}\n\nexport default News;","import React from \"react\";\nimport s from './Music.module.css'\n\nconst Music = () => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;","import React from \"react\";\nimport s from './Setting.module.css'\n\nconst Setting = () => {\n    return (\n        <div>\n            Setting\n        </div>\n    )\n}\n\nexport default Setting;","import React from 'react';\n\ntype FriendTypeProps = {\n    // photo: SitebarType\n}\n\nconst MyFriends: React.FC<FriendTypeProps> = (props) => {\n\n    // let friendsElements = props.photo.icon.map(f => <Friends key={f.id}/>);\n    // let messagesElements = props.messages.map(m => <Message name={m.name}/>);\n\n    return (\n      <div>\n          <div>\n              {/*{friendsElements}*/}\n          </div>\n          <div>\n              {/*{messagesElements}*/}\n          </div>\n      </div>\n    )\n}\n\nexport default MyFriends;\n","import { ActionsTypes } from '../types/dispatchTypes';\nimport { DialogType, MessagesType } from '../types/types';\n\n\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE ';\n\n\nconst initialState = {\n    dialogs: [\n        {id: 1, name: 'Dimych'},\n        {id: 2, name: 'Andrey'},\n        {id: 3, name: 'Sveta'},\n        {id: 4, name: 'Sasha'},\n        {id: 5, name: 'Valera'},\n        {id: 6, name: 'Viktor'},\n    ] as Array<DialogType>,\n    messages: [\n        {id: 1, message: 'Hello!!!'},\n        {id: 2, message: 'Haw are you?'},\n        {id: 3, message: 'This is my friend.'},\n        {id: 4, message: 'yo'},\n        {id: 5, message: 'yo'},\n    ] as Array<MessagesType>,\n    newMessageBody: '' as string\n};\n\nexport type initialStateType = typeof initialState\n\nexport const dialogsReducer = (state: initialStateType = initialState, action: ActionsTypes): initialStateType => {\n    switch (action.type) {\n        case UPDATE_NEW_MESSAGE_BODY:\n            return  {\n                ...state,\n                newMessageBody: action.body\n            };\n        case SEND_MESSAGE:\n            let body = state.newMessageBody;\n            return  {\n                ...state,\n                newMessageBody: '',\n                messages: [...state.messages, {id: 6, message: body}]\n            };\n        default:\n            return state;\n    }\n}\n\nexport const updateNewMessageBodyAC = (body: string) => {\n    return {\n        type: UPDATE_NEW_MESSAGE_BODY,\n        body: body\n    } as const\n}\nexport const sendMessageAC = () => {\n    return {\n        type: SEND_MESSAGE,\n    } as const\n}\n\nexport default dialogsReducer;\n","import React from 'react';\nimport s from './../Dialog.module.css'\n\n\nexport type MessageItemProps = {\n    message: string\n}\n\n\nconst Message: React.FC<MessageItemProps> = (props) => {\n    return <div className={s.dialog}> {props.message} </div>\n}\n\n\nexport default Message;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './../Dialog.module.css'\nimport {DialogItemType} from '../../../types/types';\n\n// export type DialogItemProps = {\n//     name: string\n//     id: number\n// }\n\nconst DialogItem: React.FC<DialogItemType> = (props) => {\n    let path = '/dialogs/' + props.id;\n\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem;\n","import React, {ChangeEvent} from 'react';\nimport s from './Dialog.module.css'\nimport Message from './Message/Message';\nimport DialogItem from './DialogItem/DialogItem';\nimport {DialogsPropsType} from '../../types/types';\n\n\nconst Dialogs = (props: DialogsPropsType) => {\n\tconst dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n\t// let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\n\tconst messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>);\n\t// let messagesElements = state.messages.map(m => <Message message={m.message}/>);\n\tconst newMessageBody = props.dialogsPage.newMessageBody;\n\n\t// let newMessageElement = React.createRef<HTMLTextAreaElement>()\n\n\tconst onSendMessageClick = () => {\n\t\tprops.sendMessage()\n\t}\n\n\tconst onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n\t\tlet body = e.target.value;\n\t\tprops.updateNewMessageBody(body);\n\t}\n\n\treturn (\n\t\t<div className={s.dialogs}>\n\t\t\t<div className={s.dialogsItems}>\n\t\t\t\t{dialogsElements}\n\n\t\t\t</div>\n\t\t\t<div className={s.messages}>\n\t\t\t\t<div>{messagesElements}</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div><textarea value={newMessageBody}\n\t\t\t\t\t\t\t\t   onChange={onNewMessageChange}\n\t\t\t\t\t\t\t\t   placeholder=\"Enter your message\"/></div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button onClick={onSendMessageClick}> Sent</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport {initialStateType, sendMessageAC, updateNewMessageBodyAC} from '../../redux/dialogsReducer';\nimport {connect} from 'react-redux';\nimport {AppDispatchType, AppStateType} from '../../redux/redux-store';\nimport Dialogs from './Dialogs';\n\n\n// export type MessagesPageType = {\n//     dialogs: Array<DialogType>\n//     messages: Array<MessagesType>\n//     newMessageBody: string\n// }\n\ntype MapStateToPropsType = {\n    dialogsPage: initialStateType\n}\n\ntype MapDispatchToPropsType = {\n    updateNewMessageBody: (body: string) => void\n    sendMessage: () => void\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage /*state.dialogsPage*/\n    }\n}\nconst mapDispatchToProps = (dispatch: AppDispatchType): MapDispatchToPropsType => {\n    return {\n        updateNewMessageBody: (body: string) => {\n\n            dispatch(updateNewMessageBodyAC(body))\n        },\n        sendMessage: () => {\n            dispatch(sendMessageAC())\n        }\n    }\n}\n\n// @ts-ignore\nconst DialogsContainer = connect (mapStateToProps, mapDispatchToProps) (Dialogs);\n\nexport default DialogsContainer;\n","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: `https://social-network.samuraijs.com/api/1.0/`,\n\twithCredentials: true,\n\theaders: {'API-KEY': '436269e6-3a0e-4ec4-988b-c3bac73f2390'}\n})\n\nexport const usersAPI = {\n\tgetUsers: (currentPage: number, pageSize: number) => {\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\n\t\t\t.then(response => response.data)\n\t},\n\tfollowUsers: (id: number) => {\n\t\treturn instance.post(`follow/${id}`,)\n\t\t\t.then(response => response.data.resultCode)\n\t},\n\tunfollowUsers: (id: number) => {\n\t\treturn instance.delete(`follow/${id}`,)\n\t\t\t.then(response => response.data.resultCode)\n\t},\n\tgetAuth: () => {\n\t\treturn instance.get('auth/me')\n\t\t\t.then(response => response.data)\n\t},\n\tgetProfile: (userId: string) => {\n\t\treturn instance.get(`profile/${userId}`)\n\t\t\t.then(response => response.data)\n\t}\n}","import {usersAPI} from '../api/api';\nimport {\n\tDispatchActionsType,\n\tFollowUserAT,\n\tSetCurrentPageAT,\n\tSetFollowingInProgress,\n\tsetIsFetchingAT,\n\tsetTotalUserCountAT,\n\tSetUsersAT,\n\tUnfollowUserAT\n} from '../types/dispatchTypes';\nimport {UsersPageDataType, UserType} from '../types/types';\nimport {AppDispatchType} from './redux-store';\n\nconst initialState = {\n\titems: [],\n\tpageSize: 7,\n\ttotalUsersCount: 0,\n\tcurrentPage: 1,\n\tisFetching: false,\n\tfollowingInProgress: []\n}\n\nexport const usersReducer = (state: UsersPageDataType = initialState, action: DispatchActionsType): UsersPageDataType => {\n\tswitch (action.type) {\n\t\tcase 'FOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: state.items.map(u => u.id === action.userID ? {...u, followed: true} : u)\n\t\t\t}\n\t\tcase 'UNFOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: state.items.map(u => u.id === action.userID ? {...u, followed: false} : u)\n\t\t\t}\n\t\tcase 'SET-USERS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: action.items\n\t\t\t}\n\t\tcase 'SET-CURRENT-PAGE':\n\t\t\treturn {...state, currentPage: action.currentPage}\n\t\tcase 'SET-TOTAL-USER-COUNT':\n\t\t\treturn {...state, totalUsersCount: action.count}\n\t\tcase 'TOGGLE-IS-FETCHING':\n\t\t\treturn {...state, isFetching: action.isFetching}\n\t\tcase 'SET-FOLLOWING-IN-PROGRESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfollowingInProgress: action.isFetching\n\t\t\t\t\t? [...state.followingInProgress, action.userId]\n\t\t\t\t\t: state.followingInProgress.filter(id => id !== action.userId)\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const followUser = (userID: number): FollowUserAT => {\n\treturn {type: 'FOLLOW', userID}\n}\nexport const unfollowUser = (userID: number): UnfollowUserAT => {\n\treturn {type: 'UNFOLLOW', userID}\n}\nexport const setUsers = (items: UserType[]): SetUsersAT => {\n\treturn {type: 'SET-USERS', items}\n}\nexport const setCurrentPage = (currentPage: number): SetCurrentPageAT => {\n\treturn {type: 'SET-CURRENT-PAGE', currentPage}\n}\nexport const setTotalUserCount = (totalUsersCount: number): setTotalUserCountAT => {\n\treturn {type: 'SET-TOTAL-USER-COUNT', count: totalUsersCount}\n}\nexport const toggleIsFetching = (isFetching: boolean): setIsFetchingAT => {\n\treturn {type: 'TOGGLE-IS-FETCHING', isFetching}\n}\nexport const setFollowingInProgress = (isFetching: boolean, userId: number): SetFollowingInProgress => {\n\treturn {type: 'SET-FOLLOWING-IN-PROGRESS', isFetching, userId}\n}\n\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\n\treturn async (dispatch: AppDispatchType) => {\n\t\tdispatch(toggleIsFetching(true));\n\t\tdispatch(setCurrentPage(currentPage));\n\t\tlet data = await usersAPI.getUsers(currentPage, pageSize);\n\t\tdispatch(toggleIsFetching(false));\n\t\tdispatch(setUsers(data.items));\n\t\tdispatch(setTotalUserCount(data.totalCount));\n\t}\n}\nexport const followUserThunkCreator = (userId: number) => (dispatch: AppDispatchType) => {\n\tdispatch(setFollowingInProgress(true, userId))\n\tusersAPI.followUsers(userId)\n\t\t.then(response => {\n\t\t\tif (response === 0) {\n\t\t\t\tdispatch(followUser(userId))\n\t\t\t}\n\t\t\tdispatch(setFollowingInProgress(false, userId))\n\t\t})\n}\nexport const unfollowUserThunkCreator = (userId: number) => (dispatch: AppDispatchType) => {\n\tdispatch(setFollowingInProgress(true, userId))\n\tusersAPI.unfollowUsers(userId)\n\t\t.then(response => {\n\t\t\tif (response === 0) {\n\t\t\t\tdispatch(unfollowUser(userId))\n\t\t\t}\n\t\t\tdispatch(setFollowingInProgress(false, userId))\n\t\t})\n}\n","export default __webpack_public_path__ + \"static/media/user.a603a401.png\";","import React from 'react';\nimport styles from './Users.module.css'\nimport {UserType} from '../../types/types';\nimport userPhoto from '../../assets/images/user.png'\nimport {NavLink} from 'react-router-dom';\n\ntype UsersPropsType = {\n\ttotalUsersCount: number\n\tpageSize: number\n\tcurrentPage: number\n\titems: UserType[]\n\tfollowingInProgress: number[]\n\tonPageChange: (pegeNumber: number) => void\n\tfollowUser: (userID: number) => void\n\tunfollowUser: (userID: number) => void\n}\n\nexport const Users = (props: UsersPropsType) => {\n\tconst pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n\n\tconst pages = [];\n\tfor (let i = 1; i <= pagesCount; i++) {\n\t\tpages.push(i)\n\t}\n\n\tlet pagesView: number[] = []\n\tif (props.currentPage === 1) {\n\t\tpagesView = pages.filter(p => p < 10)\n\t\tpagesView.push(pages.length)\n\t} else if (props.currentPage === pages.length) {\n\t\tpagesView.push(1)\n\t\tpagesView = [...pagesView, ...pages.filter(p => p > props.currentPage - 9)]\n\t} else if (props.currentPage > pages.length - 9) {\n\t\tpagesView.push(1)\n\t\tlet lowRange = props.currentPage - 4\n\t\tlet highRange = props.currentPage + 5\n\t\tpagesView = [...pagesView, ...pages.filter(p => p > lowRange && p < highRange)]\n\t\tpagesView.push(pages.length)\n\t} else {\n\t\tpagesView.push(1)\n\t\tlet lowRange = props.currentPage - 4\n\t\tlet highRange = props.currentPage + 5\n\t\tpagesView = [...pagesView, ...pages.filter(p => p > lowRange && p < highRange)]\n\t}\n\n\treturn <div>\n\t\t<div className={styles.pages}>\n\t\t\t{pages.map(p => {\n\t\t\t\treturn <span\n\t\t\t\t\tclassName={props.currentPage === p ? styles.selectedPage : ''}\n\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\tprops.onPageChange(p)\n\t\t\t\t\t}}>{p}</span>\n\t\t\t})}\n\n\t\t</div>\n\t\t{props.items.map(u => <div key={u.id} className={styles.body}>\n                <span>\n                    <div>\n\t\t\t\t\t\t<NavLink to={'/profile/' + u.id}>\n\t\t\t\t\t\t\t<img src={u.photos.small != null ? u.photos.small : userPhoto} alt=\"avatar\"\n\t\t\t\t\t\t\t\t className={styles.photo}/>\n\t\t\t\t\t\t</NavLink>\n                    </div>\n                    <div>{u.followed\n\t\t\t\t\t\t? <button disabled={props.followingInProgress.some(id => id === u.id)}\n\t\t\t\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t\t\t\t  props.unfollowUser(u.id)\n\t\t\t\t\t\t\t\t  }} className={styles.btn}>Unfollow</button>\n\t\t\t\t\t\t: <button disabled={props.followingInProgress.some(id => id === u.id)}\n\t\t\t\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t\t\t\t  props.followUser(u.id)\n\t\t\t\t\t\t\t\t  }} className={styles.btn}>Follow</button>}</div>\n                </span>\n\t\t\t<span className={styles.cont}>\n                    <span>\n                        <div>{u.name}</div>\n                        <div>{u.uniqueUrlName}</div>\n                    </span>\n                    <span>\n                        <div>{'u.location.country'}</div>\n                        <div>{'u.location.city'}</div>\n                    </span>\n                </span>\n\t\t</div>)}\n\t</div>\n}\n","export default __webpack_public_path__ + \"static/media/preloader.464a6fda.gif\";","import React from 'react';\nimport loader from '../../assets/images/preloader.gif';\nimport s from '../../components/Users/Users.module.css';\n\nexport const Preloader: React.FC = () => {\n\treturn <div><img src={loader} className={s.imgs}/></div>\n}","import React from 'react';\nimport {AppStateType} from '../../redux/redux-store';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {\n\tfollowUser,\n\tsetCurrentPage,\n\tsetTotalUserCount,\n\tsetUsers,\n\ttoggleIsFetching,\n\tunfollowUser,\n\tgetUsersThunkCreator,\n\tfollowUserThunkCreator,\n\tunfollowUserThunkCreator,\n} from '../../redux/usersReducer';\nimport {Users} from './Users';\nimport {Preloader} from '../../common/Preloader/Preloader';\n\n\nexport class UsersAPIClassComponent extends React.Component<UsersContainerProps> {\n\n\tcomponentDidMount() {\n\t\tthis.props.getUsersThunkCreator(this.props.usersPageData.currentPage, this.props.usersPageData.pageSize);\n\t}\n\n\tonPageChange = (currentPage: number) => {\n\t\tthis.props.getUsersThunkCreator(currentPage, this.props.usersPageData.pageSize)\n\t}\n\n\trender() {\n\t\treturn <>\n\t\t\t{this.props.usersPageData.isFetching ? <Preloader/> : null}\n\t\t\t<Users\n\t\t\t\tfollowUser={this.props.followUserThunkCreator}\n\t\t\t\tunfollowUser={this.props.unfollowUserThunkCreator}\n\t\t\t\titems={this.props.usersPageData.items}\n\t\t\t\tfollowingInProgress={this.props.usersPageData.followingInProgress}\n\t\t\t\tonPageChange={this.onPageChange}\n\t\t\t\ttotalUsersCount={this.props.usersPageData.totalUsersCount}\n\t\t\t\tpageSize={this.props.usersPageData.pageSize}\n\t\t\t\tcurrentPage={this.props.usersPageData.currentPage}\n\t\t\t/>\n\t\t</>\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tusersPageData: state.usersPageData,\n\t}\n}\n\nexport const connector = connect(mapStateToProps, {\n\tfollowUser,\n\tunfollowUser,\n\tsetCurrentPage,\n\tgetUsersThunkCreator,\n\tfollowUserThunkCreator,\n\tunfollowUserThunkCreator,\n});\n\ntype UsersContainerProps = ConnectedProps<typeof connector>;\nexport const UsersContainer = connector(UsersAPIClassComponent);","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport {ProfileInfoType} from '../../../types/types';\nimport userPhoto from '../../../assets/images/user.png'\n\ntype ProfileInfoPropsType = {\n    profile: ProfileInfoType | null\n}\n\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\n    return (\n        <div>\n            <div>\n                <img  className={s.profileImage}\n                    src=\"https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350\"/>\n            </div>\n            {/*<div className={s.descriptionBlock}>*/}\n            {/*    /!*<img src=\"https://upload.wikimedia.org/wikipedia/commons/8/8e/Kot-019.jpg\"/>*!/*/}\n            {/*    ava + description*/}\n            {/*</div>*/}\n            <div className={s.descriptionBlock}>\n                <img src={props.profile?.photos.large ? props.profile.photos.large : userPhoto}/>\n                <div>\n                    <span>{props.profile?.fullName}</span>\n                </div>\n                <div>\n                    <span>{props.profile?.lookingForAJob ? 'Looking for a job -> ' : null}</span>\n                    <span>{props.profile?.lookingForAJobDescription}</span>\n                </div>\n                <div>\n                    <span>{props.profile?.contacts.facebook} </span>\n                    <span>{props.profile?.contacts.github} </span>\n                    <span>{props.profile?.contacts.vk} </span>\n                    <span>{props.profile?.contacts.instagram} </span>\n                    <span>{props.profile?.contacts.twitter} </span>\n                    <span>{props.profile?.contacts.website} </span>\n                    <span>{props.profile?.contacts.youtube} </span>\n                    <span>{props.profile?.contacts.mainLink} </span>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo;\n","import React from 'react';\nimport s from './Post.module.css';\n\nexport type PostPropsType = {\n    message: string\n    likesCount: number\n}\n\nconst Post = (props: PostPropsType) => {\n    return (\n        <div className={`${s.item} ${s.active}`}>\n            <img src='https://i.guim.co.uk/img/media/bf7e98bd289d189e5b86d3f406f740368c663a6a/85_0_2544_1527/master/2544.jpg?width=1200&height=1200&quality=85&auto=format&fit=crop&s=98cd2e37e0df5d552473c329d88349ee'/>\n            {props.message}\n            <div>\n                <span>like: {props.likesCount}</span>\n            </div>\n        </div>\n    )\n}\nexport default Post;\n","import {PostItemType, ProfileInfoType, ProfilePageDataType} from '../types/types';\nimport {DispatchActionsType, SetUserProfileAT} from '../types/dispatchTypes';\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\n\nlet initialState = {\n    postsData: [\n        {id: 1, message: 'Hi, how are you', likesCount: 12},\n        {id: 2, message: 'It\\'s my first post', likesCount: 15},\n        {id: 3, message: 'yo yo yo', likesCount: 17},\n    ] as Array<PostItemType>,\n    newPostText: 'it-kamasutra.com',\n    profile: null\n};\n\nexport type initialStateType = typeof initialState\n\n// const profileReducer = (state: initialStateType = initialState, action: ActionsTypes): initialStateType => {\nconst profileReducer = (state: ProfilePageDataType = initialState, action: DispatchActionsType) => {\n    switch (action.type) {\n        case 'UPDATE-NEW-POST-TEXT': {\n            return {\n                ...state,\n                newPostText: action.newText\n            }\n        }\n        case 'ADD-POST': { // block structure so we can name stateCopy with same name in all cases\n            const newPost: PostItemType = {\n                id: 5,\n                message: state.newPostText,\n                likesCount: 0\n            };\n            if (newPost.message.trim() !== '') {\n                return {\n                    ...state,\n                    postsData: [newPost, ...state.postsData],\n                    newPostText: ''\n                }\n            } else {\n                return state\n            }\n        }\n        case 'SET-USER-PROFILE': {\n            return {...state, profile: action.profileInfo}\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addPostAC = (newPostText: string) => {\n    return {\n        type: ADD_POST,\n        newPostText: newPostText\n    } as const\n}\nexport const setUserProfile = (profile: ProfileInfoType): SetUserProfileAT => {\n    return {\n        type: SET_USER_PROFILE,\n        profileInfo: profile\n    } as const\n}\nexport const changeNewTextAC = (newText: string) => {\n    return {\n        type: UPDATE_NEW_POST_TEXT,\n        newText: newText\n    } as const\n}\n\nexport default profileReducer;","import React, {ChangeEvent} from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post'\nimport {addPostAC, changeNewTextAC} from '../../../redux/profileReducer';\nimport {AppDispatchType, AppStateType} from '../../../redux/redux-store';\nimport {connect} from 'react-redux';\nimport {MapDispatchToPropsType, MapStateToPropsType, MyPostType} from './types';\n\nconst MyPosts = (props: MyPostType) => {\n\tconst postElements = props.postsData.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\n\n\tconst newPostElement = React.createRef<HTMLTextAreaElement>();\n\tconst addPost = () => {   /*добавляет пост*/\n\t\tif (newPostElement.current) {\n\t\t\tprops.addPost('');\n\t\t\t/*props.updateNewPostText('')*/ /*очищает поле ввода после добавления поста*/\n\t\t}\n\t}\n\tconst onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n\t\tprops.onPostChange(e.currentTarget?.value);\n\t\t// let text = e.currentTarget?.value;\n\t}\n\t//     обработчик принимает событие event\n\t//     типизируем event - ChangeEvent - внутри типизируем на какой элемент событие прилетает\n\t//     в данном случае событие прилетает на HTMLTextAreaElement\n\treturn (\n\t\t<div className={s.postsBlock}>\n\t\t\t{props.postsData[1].message}\n\t\t\t<h3>My posts</h3>\n\t\t\t<div>\n\t\t\t\t<div>\n                    <textarea\n\t\t\t\t\t\tonChange={onPostChange}\n\t\t\t\t\t\tref={newPostElement}\n\t\t\t\t\t\tvalue={props.newPostText}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={addPost}>Add post</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={s.posts}>\n\t\t\t\t{postElements}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n\t// no debugger\n\tpostsData: state.profilePage.postsData,\n\tnewPostText: state.profilePage.newPostText,\n\tprofile: state.profilePage.profile\n})\nconst mapDispatchToProps = (dispatch: AppDispatchType): MapDispatchToPropsType => {\n\t// yes debugger\n\treturn {\n\t\taddPost: (newPostText: string) => {\n\t\t\tdispatch(addPostAC(newPostText))\n\t\t},\n\t\tonPostChange: (text: string) => {\n\t\t\tdispatch(changeNewTextAC(text))\n\t\t}\n\t}\n}\n\nexport const MyPostsContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(\n\tmapStateToProps, mapDispatchToProps\n)(MyPosts)\n","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport {MyPostsContainer} from './MyPosts/MyPosts';\nimport { ProfileInfoType } from '../../types/types';\n\ntype ProfilePropsType = {\n    profile: ProfileInfoType | null\n}\n\nconst Profile = (props: ProfilePropsType) => {\n\n    return (\n        <div className={s.content}>\n            <ProfileInfo profile={props.profile}/>\n            <MyPostsContainer/>\n\n        </div>\n    )\n}\nexport default Profile;\n","import React from 'react';\nimport Profile from './Profile';\nimport {ProfileInfoType, ProfilePageDataType} from '../../types/types';\nimport axios from 'axios';\nimport {AppStateType} from '../../redux/redux-store';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {setUserProfile} from '../../redux/profileReducer';\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\nimport { usersAPI } from '../../api/api';\n\nclass ProfileContainerClass extends React.Component<ProfileContainerWithRoutePropsType> {\n\tcomponentDidMount() {\n\t\tlet userId: string;\n\t\tthis.props.match.params.userId ? userId = this.props.match.params.userId : userId = '2';\n\t\taxios.get<ProfileInfoType>(`https://social-network.samuraijs.com/api/1.0/profile/${userId}`)\n\t\t\t.then(response => {\n\t\t\t\tthis.props.setUserProfile(response.data)\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t\t<Profile profile={this.props.profile}/>\n\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nlet mapStateToProps = (state: AppStateType): ProfilePageDataType => {\n\treturn state.profilePage\n\n}\n\nconst connector = connect(mapStateToProps, {setUserProfile});\ntype ProfileContainerProps = ConnectedProps<typeof connector>;\ntype PathParamsType = { userId: string }\ntype ProfileContainerWithRoutePropsType = RouteComponentProps<PathParamsType> & ProfileContainerProps\nconst withUrlDataProfileContainer = withRouter(ProfileContainerClass)\nexport const ProfileContainer = connector(withUrlDataProfileContainer);\n\n","import {AuthType} from '../types/types';\nimport { DispatchActionsType, SetUserDataAT} from '../types/dispatchTypes';\n\nlet initialState: AuthType = {\n\tdata:\n\t\t{\n\t\t\tid: NaN,\n\t\t\tlogin: '',\n\t\t\temail: '',\n\t\t},\n\tisAuth: false,\n\tmessages: [],\n\tfieldsErrors: [],\n\tresultCode: 0,\n}\n\nexport const authReducer = (state = initialState, action: DispatchActionsType) => {\n\tswitch (action.type) {\n\t\tcase 'SET-USER-DATA':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: {...action.data},\n\t\t\t\tisAuth: true\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const setAuthUserData = (id: number, login: string, email: string): SetUserDataAT => {\n\treturn {\n\t\ttype: 'SET-USER-DATA',\n\t\tdata: {\n\t\t\tid, login, email,\n\t\t}\n\t}\n}\n\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.css';\n\nexport default Header;\n\n\ntype HeaderPropsType = {\n\tisAuth: boolean,\n\tlogin: string\n}\n\nfunction Header(props: HeaderPropsType) {\n\treturn (\n\t\t<header className={s.header}>\n\t\t\t<div>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR_-I86af1RynC0u9KgHKUD-H6tCwT_Cf_P2Q&usqp=CAU\"/>\n\t\t\t</div>\n\t\t\t<div className={s.loginBlock}>\n\t\t\t\t{props.isAuth ? props.login : <NavLink to={'/login'}>Login</NavLink>}\n\t\t\t</div>\n\t\t</header>\n\t)\n}","import React from 'react';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport {AppStateType} from '../../redux/redux-store';\nimport s from './Header.module.css';\nimport {setAuthUserData} from '../../redux/authReducer';\nimport {usersAPI} from '../../api/api';\nimport Header from './Header';\nimport {AuthType} from '../../types/types';\nimport axios from 'axios';\n\n\nclass HeaderClassComponent extends React.Component<HeaderContainerProps> {\n\n\tcomponentDidMount() {\n\t\tusersAPI.getAuth()\n\t\t\t.then(response => {\n\t\t\t\tif (response.resultCode === 0) {\n\t\t\t\t\tlet {id, login, email} = response.data;\n\t\t\t\t\tthis.props.setAuthUserData(id, login, email);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn <Header isAuth={this.props.isAuth} login={this.props.login}/>\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {isAuth: state.authData.isAuth, login: state.authData.data.login}\n}\n\nconst connector = connect(mapStateToProps, {\n\tsetAuthUserData,\n});\ntype HeaderContainerProps = ConnectedProps<typeof connector>;\nexport const HeaderContainer = connector(HeaderClassComponent);","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Setting from './components/Setting/Setting';\nimport Friends from './components/Navbar/Friends/Friends';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport {UsersContainer} from './components/Users/UsersContainer';\nimport { ProfileContainer } from './components/Profile/ProfileContainer';\nimport { HeaderContainer } from './components/Header/HeaderContainer';\n\nexport type AppPropsType = {\n\n}\n\nconst App: React.FC<AppPropsType> = (props) => {\n    // const state = props.store.getState()\n\n    return (\n        <div className=\"app-wrapper\">\n            <HeaderContainer/>\n            <Navbar/>\n            <div className={'app-wrapper-content'}>\n                <Route path={'/dialogs'}\n                       render={() => <DialogsContainer />}/>\n                <Route path={'/profile/:userId?'}\n                       render={() => <ProfileContainer />}/>\n                <Route path={'/users'}\n                       render={() => <UsersContainer/>}/>\n                <Route path={'/news'} render={() => <News/>}/>\n                <Route path={'/music'} render={() => <Music/>}/>\n                <Route path={'/setting'} render={() => <Setting/>}/>\n                <Route path={'/friends'} render={() => <Friends />}/>\n            </div>\n        </div>\n    )\n}\n\n\nexport default App;\n","import {SitebarType} from '../types/types';\nimport {ActionsTypes, DispatchActionsType} from '../types/dispatchTypes';\n\n\nlet initialState = {\n    friends: [\n        {id: 1, name: 'Andrey'},\n        {id: 2, name: 'Sasha'},\n        {id: 3, name: 'Viktor'},\n    ],\n    icon: [\n        {id: 1, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_4.jpg'},\n        {id: 2, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_1.jpg'},\n        {id: 3, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_2.jpg'},\n        {id: 4, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_3.jpg'},\n    ]\n};\n\nconst sidebarReducer = (state: SitebarType = initialState, action: DispatchActionsType) => {\n\n    return state;\n}\n\nexport default sidebarReducer;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport profileReducer from './profileReducer';\nimport dialogsReducer from './dialogsReducer';\nimport sidebarReducer from './sidebarReducer';\nimport {usersReducer} from './usersReducer';\nimport {authReducer} from './authReducer';\nimport thunkMiddleware from 'redux-thunk';\n\nexport const rootReducer = combineReducers({\n\tprofilePage: profileReducer,\n\tdialogsPage: dialogsReducer,\n\tsidebarReducer: sidebarReducer,\n\tusersPageData: usersReducer,\n\tauthData: authReducer,\n})\n\n\nexport type AppStateType = ReturnType<typeof store.getState>;\nexport type AppDispatchType = typeof store.dispatch;\nexport type StoreType = typeof store;\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\nexport default store;\n\n// export type AppStateType = ReturnType<typeof rootReducer>\n//\n// export const store = createStore(rootReducer);\n//@ts-ignore\nwindow.store = store\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport store, {rootReducer} from './redux/redux-store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter >\n            <Provider store={store}>\n                <App  />\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n// function rerenderEntireTree() {\n//\n// }\n\n// rerenderEntireTree();\n// store.subscribe(rerenderEntireTree);\n"],"sourceRoot":""}