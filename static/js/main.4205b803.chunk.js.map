{"version":3,"sources":["components/Dialogs/Dialog.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Setting.tsx","components/Navbar/Friends/Friends.tsx","redux/dialogsReducer.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Dialogs.tsx","hok/witthAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","api/api.ts","redux/usersReducer.ts","assets/images/user.png","components/Users/Users.tsx","assets/images/preloader.gif","common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","redux/authReducer.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","redux/profileReducer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Login/Login.tsx","App.tsx","redux/sidebarReducer.tsx","redux/redux-store.tsx","index.tsx"],"names":["module","exports","Navbar","prpps","className","s","nav","item","to","activeClassName","activelink","News","Music","Setting","MyFriends","props","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageBody","dialogsReducer","state","action","type","body","Message","dialog","DialogItem","path","active","Dialogs","dialogsElements","dialogsPage","map","d","messagesElements","m","dialogsItems","value","onChange","e","target","updateNewMessageBody","placeholder","onClick","sendMessage","mapStateToPropsForRedirect","isAuth","authData","withAuthRedirect","Component","connect","restProps","compose","dispatch","updateNewMessageBodyAC","instance","axios","create","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","then","response","data","post","resultCode","delete","console","warn","authAPI","getAuth","userId","profileAPI","getProfile","getStatus","updateStatus","newText","put","status","items","totalUsersCount","isFetching","followingInProgress","followUser","userID","unfollowUser","setCurrentPage","toggleIsFetching","setFollowingInProgress","Users","pagesCount","Math","ceil","pages","i","push","pagesView","filter","p","length","lowRange","highRange","styles","selectedPage","event","onPageChange","u","src","photos","small","userPhoto","alt","photo","followed","disabled","some","btn","cont","uniqueUrlName","Preloader","loader","imgs","UsersContainer","getUsersThunkCreator","usersPageData","this","followUserThunkCreator","unfollowUserThunkCreator","React","a","count","totalCount","NaN","login","email","fieldsErrors","Header","header","loginBlock","HeaderClassComponent","getAuthUserData","HeaderContainer","setAuthUserData","connector","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onStatusChange","currentTarget","prevProps","prevState","autoFocus","onBlur","statusBlock","onDoubleClick","ProfileInfo","profile","descriptionBlock","large","fullName","lookingForAJob","lookingForAJobDescription","contacts","facebook","github","vk","instagram","twitter","website","youtube","mainLink","Post","likesCount","postsData","newPostText","setStatus","profileReducer","newPost","trim","profileInfo","MyPostsContainer","profilePage","addPost","addPostAC","onPostChange","text","postElements","newPostElement","createRef","postsBlock","ref","current","posts","Profile","content","ProfileContainer","getUserProfileTC","match","params","getStatusTC","updateStatusTC","statusText","withRouter","Login","App","render","DialogsContainer","Friends","friends","icon","img","sidebarReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4205b803.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__2nWS6\",\"dialogsItems\":\"Dialog_dialogsItems__1Ylnr\",\"active\":\"Dialog_active__24gaD\",\"dialog\":\"Dialog_dialog__3bJrQ\",\"messages\":\"Dialog_messages__19Bic\",\"message\":\"Dialog_message__1YXnE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Users_body__3g2q8\",\"pages\":\"Users_pages__2ZPtK\",\"photo\":\"Users_photo__2hOPg\",\"cont\":\"Users_cont__3AYXt\",\"btn\":\"Users_btn__9AIH5\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"imgs\":\"Users_imgs__2XvSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"profileImage\":\"ProfileInfo_profileImage__V_r63\",\"statusBlock\":\"ProfileInfo_statusBlock__3HLvc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"active\":\"Post_active__1HCRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activelink\":\"Navbar_activelink__2l0ss\"};","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from 'react-router-dom';\n\nexport type SitebarTypeProps = {\n    // appState: StateType\n}\n\nconst Navbar: React.FC<SitebarTypeProps> = (prpps) => {\n    return (\n        (\n            <nav className={s.nav}>\n\n                <div className={s.item}>\n                    <NavLink to=\"/profile\" activeClassName={s.activelink}> Profile </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/dialogs\" activeClassName={s.activelink}> Messages </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/users\" activeClassName={s.activelink}> Users </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/news\" activeClassName={s.activelink}> News </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/music\" activeClassName={s.activelink}> Music </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/setting\" activeClassName={s.activelink}> Settings </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/friends\" activeClassName={s.activelink}> Friends </NavLink>\n                </div>\n\n            </nav>\n        )\n    )\n}\nexport default Navbar;\n","import React from \"react\";\nimport s from './News.module.css'\n\nconst News = () => {\n    return (\n        <div>\n            NEWS\n        </div>\n    )\n}\n\nexport default News;","import React from \"react\";\nimport s from './Music.module.css'\n\nconst Music = () => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;","import React from \"react\";\nimport s from './Setting.module.css'\n\nconst Setting = () => {\n    return (\n        <div>\n            Setting\n        </div>\n    )\n}\n\nexport default Setting;","import React from 'react';\n\ntype FriendTypeProps = {\n    // photo: SitebarType\n}\n\nconst MyFriends: React.FC<FriendTypeProps> = (props) => {\n\n    // let friendsElements = props.photo.icon.map(f => <Friends key={f.id}/>);\n    // let messagesElements = props.messages.map(m => <Message name={m.name}/>);\n\n    return (\n      <div>\n          <div>\n              {/*{friendsElements}*/}\n          </div>\n          <div>\n              {/*{messagesElements}*/}\n          </div>\n      </div>\n    )\n}\n\nexport default MyFriends;\n","import { ActionsTypes } from '../types/dispatchTypes';\nimport { DialogType, MessagesType } from '../types/types';\n\n\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE ';\n\n\nconst initialState = {\n    dialogs: [\n        {id: 1, name: 'Dimych'},\n        {id: 2, name: 'Andrey'},\n        {id: 3, name: 'Sveta'},\n        {id: 4, name: 'Sasha'},\n        {id: 5, name: 'Valera'},\n        {id: 6, name: 'Viktor'},\n    ] as Array<DialogType>,\n    messages: [\n        {id: 1, message: 'Hello!!!'},\n        {id: 2, message: 'Haw are you?'},\n        {id: 3, message: 'This is my friend.'},\n        {id: 4, message: 'yo'},\n        {id: 5, message: 'yo'},\n    ] as Array<MessagesType>,\n    newMessageBody: '' as string\n};\n\nexport type initialStateType = typeof initialState\n\nexport const dialogsReducer = (state: initialStateType = initialState, action: ActionsTypes): initialStateType => {\n    switch (action.type) {\n        case UPDATE_NEW_MESSAGE_BODY:\n            return  {\n                ...state,\n                newMessageBody: action.body\n            };\n        case SEND_MESSAGE:\n            let body = state.newMessageBody;\n            return  {\n                ...state,\n                newMessageBody: '',\n                messages: [...state.messages, {id: 6, message: body}]\n            };\n        default:\n            return state;\n    }\n}\n\nexport const updateNewMessageBodyAC = (body: string) => {\n    return {\n        type: UPDATE_NEW_MESSAGE_BODY,\n        body: body\n    } as const\n}\nexport const sendMessageAC = () => {\n    return {\n        type: SEND_MESSAGE,\n    } as const\n}\n\nexport default dialogsReducer;\n","import React from 'react';\nimport s from './../Dialog.module.css'\n\n\nexport type MessageItemProps = {\n    message: string\n}\n\n\nconst Message: React.FC<MessageItemProps> = (props) => {\n    return <div className={s.dialog}> {props.message} </div>\n}\n\n\nexport default Message;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './../Dialog.module.css'\nimport {DialogItemType} from '../../../types/types';\n\n// export type DialogItemProps = {\n//     name: string\n//     id: number\n// }\n\nconst DialogItem: React.FC<DialogItemType> = (props) => {\n    let path = '/dialogs/' + props.id;\n\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem;\n","import React, {ChangeEvent} from 'react';\nimport s from './Dialog.module.css'\nimport Message from './Message/Message';\nimport DialogItem from './DialogItem/DialogItem';\nimport {DialogsPropsType} from '../../types/types';\nimport { Redirect } from 'react-router-dom';\n\n\nconst Dialogs = (props: DialogsPropsType) => {\n\tconst dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n\t// let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\n\tconst messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>);\n\t// let messagesElements = state.messages.map(m => <Message message={m.message}/>);\n\tconst newMessageBody = props.dialogsPage.newMessageBody;\n\n\n\tconst onSendMessageClick = () => {\n\t\tprops.sendMessage()\n\t}\n\n\tconst onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n\t\tlet body = e.target.value;\n\t\tprops.updateNewMessageBody(body);\n\t}\n\n\treturn (\n\t\t<div className={s.dialogs}>\n\t\t\t<div className={s.dialogsItems}>\n\t\t\t\t{dialogsElements}\n\n\t\t\t</div>\n\t\t\t<div className={s.messages}>\n\t\t\t\t<div>{messagesElements}</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div><textarea value={newMessageBody}\n\t\t\t\t\t\t\t\t   onChange={onNewMessageChange}\n\t\t\t\t\t\t\t\t   placeholder=\"Enter your message\"/></div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button onClick={onSendMessageClick}> Sent</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Dialogs;\n","import React, { ComponentType } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport { AppStateType } from '../redux/redux-store';\n\ntype MapStateToPropsForRedirectType = {\n\tisAuth: boolean\n}\n\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStateToPropsForRedirectType => {\n\treturn {\n\t\tisAuth: state.authData.isAuth\n\t}\n}\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n\tconst RedirectComponent = (props: MapStateToPropsForRedirectType) => {\n\t\tlet {isAuth, ...restProps} = props\n\t\tif (!isAuth) return <Redirect to=\"/login\"/>\n\t\treturn <Component {...restProps as T}/>\n\t}\n\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n\treturn ConnectedAuthRedirectComponent;\n}","import React from 'react';\nimport {initialStateType, sendMessageAC, updateNewMessageBodyAC} from '../../redux/dialogsReducer';\nimport {connect} from 'react-redux';\nimport {AppDispatchType, AppStateType} from '../../redux/redux-store';\nimport Dialogs from './Dialogs';\nimport { withAuthRedirect } from '../../hok/witthAuthRedirect';\nimport { compose } from 'redux';\n\n\ntype MapStateToPropsType = {\n    dialogsPage: initialStateType\n}\n\ntype MapDispatchToPropsType = {\n    updateNewMessageBody: (body: string) => void\n    sendMessage: () => void\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage, /*state.dialogsPage*/\n    }\n}\nconst mapDispatchToProps = (dispatch: AppDispatchType): MapDispatchToPropsType => {\n    return {\n        updateNewMessageBody: (body: string) => {\n\n            dispatch(updateNewMessageBodyAC(body))\n        },\n        sendMessage: () => {\n            dispatch(sendMessageAC())\n        }\n    }\n}\n\n// @ts-ignore\n// const DialogsContainer = withAuthRedirect (connect (mapStateToProps, mapDispatchToProps) (Dialogs));\n\nexport default compose<React.ComponentType>(\n    connect (mapStateToProps, mapDispatchToProps),\nwithAuthRedirect\n)(Dialogs);\n\n","import axios from 'axios';\nimport {ProfileInfoType} from '../types/types';\n\nconst instance = axios.create({\n\tbaseURL: `https://social-network.samuraijs.com/api/1.0/`,\n\twithCredentials: true,\n\theaders: {'API-KEY': '6587bf96-e19c-43d8-b7f7-8a779c2e9e9d'}\n})\n\nexport const usersAPI = {\n\tgetUsers: (currentPage: number, pageSize: number) => {\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\n\t\t\t.then(response => response.data)\n\t},\n\tfollowUsers: (id: number) => {\n\t\treturn instance.post(`follow/${id}`,)\n\t\t\t.then(response => response.data.resultCode)\n\t},\n\tunfollowUsers: (id: number) => {\n\t\treturn instance.delete(`follow/${id}`,)\n\t\t\t.then(response => response.data.resultCode)\n\t},\n\tgetAuth: () => {\n\t\tconsole.warn('use authAPI')\n\t\treturn authAPI.getAuth()\n\t},\n\tgetProfile: (userId: string) => {\n\t\tconsole.warn('Obsolete method. Please profileAPI object.')\n\t\treturn profileAPI.getProfile(userId);\n\t}\n}\n\nexport const authAPI = {\n\tgetAuth: () => {\n\t\treturn instance.get(`auth/me`)\n\t\t\t.then(response => response.data)\n\t},\n}\n\nexport const profileAPI = {\n\tgetProfile: (userId: string) => {\n\t\treturn instance.get(`profile/${userId}`)\n\t\t\t.then(response => response.data)\n\t},\n\tgetStatus: (userId: string) => {\n\t\treturn instance.get(`profile/status/${userId}`)\n\t},\n\tupdateStatus(newText: string) {\n\t\treturn instance.put(`profile/status/`, {status: newText})\n\t}\n}","import {usersAPI} from '../api/api';\nimport {\n\tDispatchActionsType,\n\tFollowUserAT,\n\tSetCurrentPageAT,\n\tSetFollowingInProgress,\n\tsetIsFetchingAT,\n\tsetTotalUserCountAT,\n\tSetUsersAT,\n\tUnfollowUserAT\n} from '../types/dispatchTypes';\nimport {UsersPageDataType, UserType} from '../types/types';\nimport {AppDispatchType} from './redux-store';\n\nconst initialState = {\n\titems: [],\n\tpageSize: 9,\n\ttotalUsersCount: 10,\n\tcurrentPage: 1,\n\tisFetching: false,\n\tfollowingInProgress: []\n}\n\nexport const usersReducer = (state: UsersPageDataType = initialState, action: DispatchActionsType): UsersPageDataType => {\n\tswitch (action.type) {\n\t\tcase 'FOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: state.items.map(u => u.id === action.userID ? {...u, followed: true} : u)\n\t\t\t}\n\t\tcase 'UNFOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: state.items.map(u => u.id === action.userID ? {...u, followed: false} : u)\n\t\t\t}\n\t\tcase 'SET-USERS':\n\t\t\treturn {...state, items: [...action.items]}\n\t\tcase 'SET-CURRENT-PAGE':\n\t\t\treturn {...state, currentPage: action.currentPage}\n\t\tcase 'SET-TOTAL-USER-COUNT':\n\t\t\treturn {...state, totalUsersCount: action.count}\n\t\tcase 'TOGGLE-IS-FETCHING':\n\t\t\treturn {...state, isFetching: action.isFetching}\n\t\tcase 'SET-FOLLOWING-IN-PROGRESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfollowingInProgress: action.isFetching\n\t\t\t\t\t? [...state.followingInProgress, action.userId]\n\t\t\t\t\t: state.followingInProgress.filter(id => id !== action.userId)\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const followUser = (userID: number): FollowUserAT => {\n\treturn {type: 'FOLLOW', userID}\n}\nexport const unfollowUser = (userID: number): UnfollowUserAT => {\n\treturn {type: 'UNFOLLOW', userID}\n}\nexport const setUsers = (items: UserType[]): SetUsersAT => {\n\treturn {type: 'SET-USERS', items}\n}\nexport const setCurrentPage = (currentPage: number): SetCurrentPageAT => {\n\treturn {type: 'SET-CURRENT-PAGE', currentPage}\n}\nexport const setTotalUserCount = (totalUsersCount: number): setTotalUserCountAT => {\n\treturn {type: 'SET-TOTAL-USER-COUNT', count: totalUsersCount}\n}\nexport const toggleIsFetching = (isFetching: boolean): setIsFetchingAT => {\n\treturn {type: 'TOGGLE-IS-FETCHING', isFetching}\n}\nexport const setFollowingInProgress = (isFetching: boolean, userId: number): SetFollowingInProgress => {\n\treturn {type: 'SET-FOLLOWING-IN-PROGRESS', isFetching, userId}\n}\n\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\n\treturn async (dispatch: AppDispatchType) => {\n\t\tdispatch(toggleIsFetching(true));\n\t\tdispatch(setCurrentPage(currentPage));\n\t\tlet data = await usersAPI.getUsers(currentPage, pageSize);\n\t\tdispatch(toggleIsFetching(false));\n\t\tdispatch(setUsers(data.items));\n\t\tdispatch(setTotalUserCount(data.totalCount));\n\t}\n}\nexport const followUserThunkCreator = (userId: number) => (dispatch: AppDispatchType) => {\n\tdispatch(setFollowingInProgress(true, userId))\n\tusersAPI.followUsers(userId)\n\t\t.then(response => {\n\t\t\tif (response === 0) {\n\t\t\t\tdispatch(followUser(userId))\n\t\t\t}\n\t\t\tdispatch(setFollowingInProgress(false, userId))\n\t\t})\n}\nexport const unfollowUserThunkCreator = (userId: number) => (dispatch: AppDispatchType) => {\n\tdispatch(setFollowingInProgress(true, userId))\n\tusersAPI.unfollowUsers(userId)\n\t\t.then(response => {\n\t\t\tif (response === 0) {\n\t\t\t\tdispatch(unfollowUser(userId))\n\t\t\t}\n\t\t\tdispatch(setFollowingInProgress(false, userId))\n\t\t})\n}\n","export default __webpack_public_path__ + \"static/media/user.a603a401.png\";","import React from 'react';\nimport styles from './Users.module.css'\nimport {UserType} from '../../types/types';\nimport userPhoto from '../../assets/images/user.png'\nimport {NavLink} from 'react-router-dom';\n\ntype UsersPropsType = {\n\ttotalUsersCount: number\n\tpageSize: number\n\tcurrentPage: number\n\titems: UserType[]\n\tfollowingInProgress: number[]\n\tonPageChange: (pegeNumber: number) => void\n\tfollowUser: (userID: number) => void\n\tunfollowUser: (userID: number) => void\n}\n\nexport const Users = (props: UsersPropsType) => {\n\tconst pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n\n\tconst pages = [];\n\tfor (let i = 1; i <= pagesCount; i++) {\n\t\tpages.push(i)\n\t}\n\n\tlet pagesView: number[] = []\n\tif (props.currentPage === 1) {\n\t\tpagesView = pages.filter(p => p < 10)\n\t\tpagesView.push(pages.length)\n\t} else if (props.currentPage === pages.length) {\n\t\tpagesView.push(1)\n\t\tpagesView = [...pagesView, ...pages.filter(p => p > props.currentPage - 9)]\n\t} else if (props.currentPage > pages.length - 9) {\n\t\tpagesView.push(1)\n\t\tlet lowRange = props.currentPage - 4\n\t\tlet highRange = props.currentPage + 5\n\t\tpagesView = [...pagesView, ...pages.filter(p => p > lowRange && p < highRange)]\n\t\tpagesView.push(pages.length)\n\t} else {\n\t\tpagesView.push(1)\n\t\tlet lowRange = props.currentPage - 4\n\t\tlet highRange = props.currentPage + 5\n\t\tpagesView = [...pagesView, ...pages.filter(p => p > lowRange && p < highRange)]\n\t}\n\n\treturn <div>\n\t\t<div className={styles.pages}>\n\t\t\t{pages.map(p => {\n\t\t\t\treturn <span\n\t\t\t\t\tclassName={props.currentPage === p ? styles.selectedPage : ''}\n\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\tprops.onPageChange(p)\n\t\t\t\t\t}}>{p}</span>\n\t\t\t})}\n\n\t\t</div>\n\t\t{props.items.map(u => <div key={u.id} className={styles.body}>\n                <span>\n                    <div>\n\t\t\t\t\t\t<NavLink to={'/profile/' + u.id}>\n\t\t\t\t\t\t\t<img src={u.photos.small != null ? u.photos.small : userPhoto} alt=\"avatar\"\n\t\t\t\t\t\t\t\t className={styles.photo}/>\n\t\t\t\t\t\t</NavLink>\n                    </div>\n                    <div>{u.followed\n\t\t\t\t\t\t? <button disabled={props.followingInProgress.some(id => id === u.id)}\n\t\t\t\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t\t\t\t  props.unfollowUser(u.id)\n\t\t\t\t\t\t\t\t  }} className={styles.btn}>Unfollow</button>\n\t\t\t\t\t\t: <button disabled={props.followingInProgress.some(id => id === u.id)}\n\t\t\t\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t\t\t\t  props.followUser(u.id)\n\t\t\t\t\t\t\t\t  }} className={styles.btn}>Follow</button>}</div>\n                </span>\n\t\t\t<span className={styles.cont}>\n                    <span>\n                        <div>{u.name}</div>\n                        <div>{u.uniqueUrlName}</div>\n                    </span>\n                    <span>\n                        <div>{'u.location.country'}</div>\n                        <div>{'u.location.city'}</div>\n                    </span>\n                </span>\n\t\t</div>)}\n\t</div>\n}\n","export default __webpack_public_path__ + \"static/media/preloader.464a6fda.gif\";","import React from 'react';\nimport loader from '../../assets/images/preloader.gif';\nimport s from '../../components/Users/Users.module.css';\n\nexport const Preloader: React.FC = () => {\n\treturn <div><img src={loader} className={s.imgs}/></div>\n}","import React from 'react';\nimport {AppStateType} from '../../redux/redux-store';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {\n\tfollowUser,\n\tsetCurrentPage,\n\tsetTotalUserCount,\n\tsetUsers,\n\ttoggleIsFetching,\n\tunfollowUser,\n\tgetUsersThunkCreator,\n\tfollowUserThunkCreator,\n\tunfollowUserThunkCreator,\n} from '../../redux/usersReducer';\nimport {Users} from './Users';\nimport {Preloader} from '../../common/Preloader/Preloader';\nimport {withAuthRedirect} from '../../hok/witthAuthRedirect';\nimport {compose} from 'redux';\n\n\n// @ts-ignore\nexport class UsersContainer extends React.Component<UsersContainerProps> {\n\n\tcomponentDidMount() {\n\t\tthis.props.getUsersThunkCreator(this.props.usersPageData.currentPage, this.props.usersPageData.pageSize);\n\t}\n\n\tonPageChange = (currentPage: number) => {\n\t\tthis.props.getUsersThunkCreator(currentPage, this.props.usersPageData.pageSize)\n\t}\n\n\trender() {\n\t\treturn <>\n\t\t\t{this.props.usersPageData.isFetching ? <Preloader/> : null}\n\t\t\t<Users\n\t\t\t\tfollowUser={this.props.followUserThunkCreator}\n\t\t\t\tunfollowUser={this.props.unfollowUserThunkCreator}\n\t\t\t\titems={this.props.usersPageData.items}\n\t\t\t\tfollowingInProgress={this.props.usersPageData.followingInProgress}\n\t\t\t\tonPageChange={this.onPageChange}\n\t\t\t\ttotalUsersCount={this.props.usersPageData.totalUsersCount}\n\t\t\t\tpageSize={this.props.usersPageData.pageSize}\n\t\t\t\tcurrentPage={this.props.usersPageData.currentPage}\n\t\t\t/>\n\t\t</>\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tusersPageData: state.usersPageData,\n\t}\n}\n\nexport default compose<React.ComponentType>(\n\twithAuthRedirect,\n\tconnect(mapStateToProps, {\n\t\tfollowUser,\n\t\tunfollowUser,\n\t\tsetCurrentPage,\n\t\tgetUsersThunkCreator,\n\t\tfollowUserThunkCreator,\n\t\tunfollowUserThunkCreator,\n\t})\n)(UsersContainer)","import {AuthType} from '../types/types';\nimport { DispatchActionsType, SetUserDataAT} from '../types/dispatchTypes';\nimport { AppDispatchType } from './redux-store';\nimport { usersAPI } from '../api/api';\n\nlet initialState: AuthType = {\n\tdata:\n\t\t{\n\t\t\tid: NaN,\n\t\t\tlogin: '',\n\t\t\temail: '',\n\t\t},\n\tisAuth: false,\n\tmessages: [],\n\tfieldsErrors: [],\n\tresultCode: 0,\n}\n\nexport const authReducer = (state = initialState, action: DispatchActionsType) => {\n\tswitch (action.type) {\n\t\tcase 'SET-USER-DATA':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: {...action.data},\n\t\t\t\tisAuth: true\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const setAuthUserData = (id: number, login: string, email: string): SetUserDataAT => {\n\treturn {\n\t\ttype: 'SET-USER-DATA',\n\t\tdata: {\n\t\t\tid, login, email,\n\t\t}\n\t}\n}\n\nexport const getAuthUserData = () => (dispatch: AppDispatchType) => {\n\tusersAPI.getAuth()\n\t\t.then(response => {\n\t\t\tif(response.resultCode === 0) {\n\t\t\t\tlet {id, login, email} = response.data\n\t\t\t\tdispatch(setAuthUserData(id, login, email))\n\t\t\t}\n\t\t});\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.css';\n\nexport default Header;\n\n\ntype HeaderPropsType = {\n\tisAuth: boolean,\n\tlogin: string\n}\n\nfunction Header(props: HeaderPropsType) {\n\treturn (\n\t\t<header className={s.header}>\n\t\t\t<div>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR_-I86af1RynC0u9KgHKUD-H6tCwT_Cf_P2Q&usqp=CAU\"/>\n\t\t\t</div>\n\t\t\t<div className={s.loginBlock}>\n\t\t\t\t{props.isAuth ? props.login : <NavLink to={'/login'}>Login</NavLink>}\n\t\t\t</div>\n\t\t</header>\n\t)\n}","import React from 'react';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport {AppStateType} from '../../redux/redux-store';\nimport s from './Header.module.css';\nimport {setAuthUserData, getAuthUserData} from '../../redux/authReducer';\nimport {usersAPI} from '../../api/api';\nimport Header from './Header';\nimport {AuthType} from '../../types/types';\nimport axios from 'axios';\n\n\nclass HeaderClassComponent extends React.Component<HeaderContainerProps> {\n\n\tcomponentDidMount() {\n\t\tusersAPI.getAuth()\n\t\tthis.props.getAuthUserData()\n\t}\n\n\trender() {\n\t\treturn <Header isAuth={this.props.isAuth} login={this.props.login}/>\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {isAuth: state.authData.isAuth, login: state.authData.data.login}\n}\n\nconst connector = connect(mapStateToProps, {\n\tgetAuthUserData,\n});\ntype HeaderContainerProps = ConnectedProps<typeof connector>;\nexport const HeaderContainer = connector(HeaderClassComponent);","import React, {ChangeEvent} from 'react';\nimport s from './ProfileInfo.module.css';\n\ntype ProfileStatusPropsType = {\n\tstatus: string\n\tupdateStatus: (text: string) => void\n}\n\nclass ProfileStatus extends React.Component<ProfileStatusPropsType> {\n\n\tstate = {\n\t\teditMode: false,\n\t\tstatus: this.props.status\n\t}\n\n\tactivateEditMode = () => {\n\t\tthis.setState({\n\t\t\teditMode: true\n\t\t});\n\t}\n\n\tdeactivateEditMode = () => {\n\t\tthis.setState({\n\t\t\teditMode: false\n\t\t});\n\t\tthis.props.updateStatus(this.state.status)\n\t}\n\n\tonStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tthis.setState({\n\t\t\tstatus: e.currentTarget.value\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{ editMode: boolean, status: string }>) {\n\t\tif (prevProps.status !== this.props.status) {\n\t\t\tthis.setState({\n\t\t\t\tstatus: this.props.status\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tthis.state.editMode\n\t\t\t\t\t\t? <input\n\t\t\t\t\t\t\tvalue={this.state.status}\n\t\t\t\t\t\t\tonChange={this.onStatusChange}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonBlur={this.deactivateEditMode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t: <span className={s.statusBlock} onDoubleClick={this.activateEditMode}>\n                            {this.props.status}\n                        </span>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default ProfileStatus;\n","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport {ProfileInfoType} from '../../../types/types';\nimport userPhoto from '../../../assets/images/user.png'\nimport ProfileStatus from './ProfileStatus'\nimport {Preloader} from '../../../common/Preloader/Preloader';\n\ntype ProfileInfoPropsType = {\n\tprofile: ProfileInfoType | null\n\tstatus: string\n\tupdateStatus: (text: string) => void\n}\n\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\n\n\tif (!props.profile) {\n\t\treturn <Preloader/>\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={s.descriptionBlock}>\n\t\t\t\t\t<img src={props.profile?.photos.large ? props.profile.photos.large : userPhoto}/>\n\t\t\t\t\t<ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>{props.profile?.fullName}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>{props.profile?.lookingForAJob ? 'Looking for a job -> ' : null}</span>\n\t\t\t\t\t\t<span>{props.profile?.lookingForAJobDescription}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>{props.profile?.contacts.facebook} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.github} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.vk} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.instagram} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.twitter} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.website} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.youtube} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.mainLink} </span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default ProfileInfo;\n","import React from 'react';\nimport s from './Post.module.css';\n\nexport type PostPropsType = {\n    message: string\n    likesCount: number\n}\n\nconst Post = (props: PostPropsType) => {\n    return (\n        <div className={`${s.item} ${s.active}`}>\n            <img src='https://i.guim.co.uk/img/media/bf7e98bd289d189e5b86d3f406f740368c663a6a/85_0_2544_1527/master/2544.jpg?width=1200&height=1200&quality=85&auto=format&fit=crop&s=98cd2e37e0df5d552473c329d88349ee'/>\n            {props.message}\n            <div>\n                <span>like: {props.likesCount}</span>\n            </div>\n        </div>\n    )\n}\nexport default Post;\n","import {PostItemType, ProfileInfoType, ProfilePageDataType} from '../types/types';\nimport {DispatchActionsType, SetProfileStatusAT, SetUserProfileAT} from '../types/dispatchTypes';\nimport {AppDispatchType} from './redux-store';\nimport {profileAPI, usersAPI} from '../api/api';\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\n\nlet initialState = {\n\tpostsData: [\n\t\t{id: 1, message: 'Hi, how are you', likesCount: 12},\n\t\t{id: 2, message: 'It\\'s my first post', likesCount: 15},\n\t\t{id: 3, message: 'yo yo yo', likesCount: 17},\n\t] as Array<PostItemType>,\n\tnewPostText: 'it-kamasutra.com',\n\tprofile: null,\n\tstatus: ''\n};\n\nexport type initialStateType = typeof initialState\n\n// const profileReducer = (state: initialStateType = initialState, action: ActionsTypes): initialStateType => {\nconst profileReducer = (state: ProfilePageDataType = initialState, action: DispatchActionsType) => {\n\tswitch (action.type) {\n\t\tcase 'UPDATE-NEW-POST-TEXT': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tnewPostText: action.newText\n\t\t\t}\n\t\t}\n\t\tcase 'ADD-POST': { // block structure so we can name stateCopy with same name in all cases\n\t\t\tconst newPost: PostItemType = {\n\t\t\t\tid: 5,\n\t\t\t\tmessage: state.newPostText,\n\t\t\t\tlikesCount: 0\n\t\t\t};\n\t\t\tif (newPost.message.trim() !== '') {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tpostsData: [newPost, ...state.postsData],\n\t\t\t\t\tnewPostText: ''\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn state\n\t\t\t}\n\t\t}\n\t\tcase 'SET-USER-PROFILE': {\n\t\t\treturn {...state, profile: action.profileInfo}\n\t\t}\n\n\t\tcase 'SET-STATUS': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: action.status\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const addPostAC = (newPostText: string) => {\n\treturn {\n\t\ttype: ADD_POST,\n\t\tnewPostText: newPostText\n\t} as const\n}\nconst setUserProfile = (profile: ProfileInfoType): SetUserProfileAT => {\n\treturn {\n\t\ttype: SET_USER_PROFILE,\n\t\tprofileInfo: profile\n\t} as const\n}\nconst setStatus = (status: string): SetProfileStatusAT => {\n\treturn {\n\t\ttype: SET_STATUS,\n\t\tstatus: status\n\t} as const\n}\n\nexport const getUserProfileTC = (id: string) => (dispatch: AppDispatchType) => {\n\tlet userId: string;\n\tid ? userId = id : userId = '17771';\n\tusersAPI.getProfile(userId)\n\t\t.then(response => {\n\t\t\tdispatch(setUserProfile(response))\n\t\t});\n}\n\nexport const getStatusTC = (id: string) => (dispatch: AppDispatchType) => {\n\tlet userId: string;\n\tid ? userId = id : userId = '17771';\n\tprofileAPI.getStatus(userId)\n\t\t.then(response => {\n\t\t\tdispatch(setStatus(response.data))\n\t\t});\n}\n\nexport const changeNewTextAC = (newText: string) => {\n\treturn {\n\t\ttype: UPDATE_NEW_POST_TEXT,\n\t\tnewText: newText\n\t} as const\n}\n\nexport const updateStatusTC = (statusText: string) => (dispatch: AppDispatchType) => {\n\tprofileAPI.updateStatus(statusText)\n\t\t.then(response => {\n\t\t\tif (response.data.resultCode === 0) {\n\t\t\t\tdispatch(setStatus(statusText))\n\t\t\t}\n\t\t})\n}\n\nexport default profileReducer;","import React, {ChangeEvent} from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post'\nimport {addPostAC, changeNewTextAC} from '../../../redux/profileReducer';\nimport {AppDispatchType, AppStateType} from '../../../redux/redux-store';\nimport {connect} from 'react-redux';\nimport {MapDispatchToPropsType, MapStateToPropsType, MyPostType} from './types';\n\nconst MyPosts = (props: MyPostType) => {\n\tconst postElements = props.postsData.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\n\n\tconst newPostElement = React.createRef<HTMLTextAreaElement>();\n\tconst addPost = () => {   /*добавляет пост*/\n\t\tif (newPostElement.current) {\n\t\t\tprops.addPost('');\n\t\t\t/*props.updateNewPostText('')*/ /*очищает поле ввода после добавления поста*/\n\t\t}\n\t}\n\tconst onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n\t\tprops.onPostChange(e.currentTarget?.value);\n\t\t// let text = e.currentTarget?.value;\n\t}\n\t//     обработчик принимает событие event\n\t//     типизируем event - ChangeEvent - внутри типизируем на какой элемент событие прилетает\n\t//     в данном случае событие прилетает на HTMLTextAreaElement\n\treturn (\n\t\t<div className={s.postsBlock}>\n\t\t\t{props.postsData[1].message}\n\t\t\t<h3>My posts</h3>\n\t\t\t<div>\n\t\t\t\t<div>\n                    <textarea\n\t\t\t\t\t\tonChange={onPostChange}\n\t\t\t\t\t\tref={newPostElement}\n\t\t\t\t\t\tvalue={props.newPostText}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={addPost}>Add post</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={s.posts}>\n\t\t\t\t{postElements}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n\t// no debugger\n\tpostsData: state.profilePage.postsData,\n\tnewPostText: state.profilePage.newPostText,\n\tprofile: state.profilePage.profile\n})\nconst mapDispatchToProps = (dispatch: AppDispatchType): MapDispatchToPropsType => {\n\t// yes debugger\n\treturn {\n\t\taddPost: (newPostText: string) => {\n\t\t\tdispatch(addPostAC(newPostText))\n\t\t},\n\t\tonPostChange: (text: string) => {\n\t\t\tdispatch(changeNewTextAC(text))\n\t\t}\n\t}\n}\n\nexport const MyPostsContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(\n\tmapStateToProps, mapDispatchToProps\n)(MyPosts)\n","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport {MyPostsContainer} from './MyPosts/MyPosts';\nimport {ProfileInfoType} from '../../types/types';\n\ntype ProfilePropsType = {\n\tprofile: ProfileInfoType | null\n\tstatus: string\n\tupdateStatus: (text: string) => void\n}\n\nfunction Profile(props: ProfilePropsType) {\n\n\treturn (\n\t\t<div className={s.content}>\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n\t\t\t<MyPostsContainer/>\n\t\t</div>\n\t)\n}\n\nexport default Profile;\n","import React from 'react';\nimport Profile from './Profile';\nimport {ProfileInfoType, ProfilePageDataType} from '../../types/types';\nimport axios from 'axios';\nimport {AppStateType} from '../../redux/redux-store';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router-dom';\nimport {getUserProfileTC, getStatusTC, updateStatusTC} from '../../redux/profileReducer'\nimport {usersAPI} from '../../api/api';\nimport {withAuthRedirect} from '../../hok/witthAuthRedirect';\nimport {compose} from 'redux';\n\nclass ProfileContainer extends React.Component<ProfileContainerWithRoutePropsType> {\n\tcomponentDidMount() {\n\t\tthis.props.getUserProfileTC(this.props.match.params.userId)\n\t\tthis.props.getStatusTC(this.props.match.params.userId)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Profile profile={this.props.profile} status={this.props.status}\n\t\t\t\t\t\t updateStatus={this.props.updateStatusTC}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nlet mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tprofile: state.profilePage.profile,\n\t\tstatus: state.profilePage.status\n\t}\n}\n\nconst connector = connect(mapStateToProps, {getUserProfileTC, getStatusTC, updateStatusTC});\ntype ProfileContainerProps = ConnectedProps<typeof connector>;\ntype PathParamsType = { userId: string };\ntype ProfileContainerWithRoutePropsType = RouteComponentProps<PathParamsType> & ProfileContainerProps;\n\nexport default compose<React.ComponentType>(\n\tconnector,\n\twithRouter,\n\t// withAuthRedirect\n)(ProfileContainer)\n","import React from 'react';\n\nconst Login = () => {\n\treturn <h1>LOGIN</h1>\n}\n\nexport default Login;","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Setting from './components/Setting/Setting';\nimport Friends from './components/Navbar/Friends/Friends';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport {HeaderContainer} from './components/Header/HeaderContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport LoginPage from './components/Login/Login';\n\nexport type AppPropsType = {}\n\nconst App: React.FC<AppPropsType> = (props) => {\n\t// const state = props.store.getState()\n\n\treturn (\n\t\t<div className=\"app-wrapper\">\n\t\t\t<HeaderContainer/>\n\t\t\t<Navbar/>\n\t\t\t<div className={'app-wrapper-content'}>\n\t\t\t\t<Route path={'/dialogs'}\n\t\t\t\t\t   render={() => <DialogsContainer/>}/>\n\t\t\t\t<Route path={'/profile/:userId?'}\n\t\t\t\t\t   render={() => <ProfileContainer/>}/>\n\t\t\t\t<Route path={'/users'}\n\t\t\t\t\t   render={() => <UsersContainer/>}/>\n\t\t\t\t<Route path={'/login'}\n\t\t\t\t\t   render={() => <LoginPage/>}/>\n\t\t\t\t<Route path={'/news'} render={() => <News/>}/>\n\t\t\t\t<Route path={'/music'} render={() => <Music/>}/>\n\t\t\t\t<Route path={'/setting'} render={() => <Setting/>}/>\n\t\t\t\t<Route path={'/friends'} render={() => <Friends/>}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\nexport default App;\n","import {SitebarType} from '../types/types';\nimport {ActionsTypes, DispatchActionsType} from '../types/dispatchTypes';\n\n\nlet initialState = {\n    friends: [\n        {id: 1, name: 'Andrey'},\n        {id: 2, name: 'Sasha'},\n        {id: 3, name: 'Viktor'},\n    ],\n    icon: [\n        {id: 1, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_4.jpg'},\n        {id: 2, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_1.jpg'},\n        {id: 3, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_2.jpg'},\n        {id: 4, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_3.jpg'},\n    ]\n};\n\nconst sidebarReducer = (state: SitebarType = initialState, action: DispatchActionsType) => {\n\n    return state;\n}\n\nexport default sidebarReducer;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport profileReducer from './profileReducer';\nimport dialogsReducer from './dialogsReducer';\nimport sidebarReducer from './sidebarReducer';\nimport {usersReducer} from './usersReducer';\nimport {authReducer} from './authReducer';\nimport thunkMiddleware from 'redux-thunk';\n\nexport const rootReducer = combineReducers({\n\tprofilePage: profileReducer,\n\tdialogsPage: dialogsReducer,\n\tsidebarReducer: sidebarReducer,\n\tusersPageData: usersReducer,\n\tauthData: authReducer,\n})\n\n\nexport type AppStateType = ReturnType<typeof store.getState>;\nexport type AppDispatchType = typeof store.dispatch;\nexport type StoreType = typeof store;\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\nexport default store;\n\n// export type AppStateType = ReturnType<typeof rootReducer>\n//\n// export const store = createStore(rootReducer);\n//@ts-ignore\nwindow.store = store\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport store, {rootReducer} from './redux/redux-store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter >\n            <Provider store={store}>\n                <App  />\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n// function rerenderEntireTree() {\n//\n// }\n\n// rerenderEntireTree();\n// store.subscribe(rerenderEntireTree);\n"],"sourceRoot":""}