{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialog.module.css","components/Users/Users.module.css","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Setting/Setting.tsx","components/Navbar/Friends/Friends.tsx","redux/dialogsReducer.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Dialogs.tsx","hok/witthAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","api/api.ts","redux/usersReducer.ts","assets/images/user.png","components/Users/Users.tsx","assets/images/preloader.gif","common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","redux/authReducer.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","redux/profileReducer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Login/Login.tsx","App.tsx","redux/sidebarReducer.tsx","redux/redux-store.tsx","index.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","Navbar","prpps","className","s","nav","item","to","activeClassName","activelink","News","Music","Setting","MyFriends","props","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","body","newMessageBody","Message","dialog","DialogItem","path","active","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","Dialogs","dialogsElements","dialogsPage","map","d","messagesElements","m","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","isAuth","authData","withAuthRedirect","Component","connect","restProps","compose","dispatch","sendMessageAC","instance","axios","create","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","then","response","data","post","resultCode","delete","console","warn","authAPI","getAuth","userId","profileAPI","getProfile","getStatus","updateStatus","newText","put","status","items","totalUsersCount","isFetching","followingInProgress","followUser","userID","unfollowUser","setCurrentPage","toggleIsFetching","setFollowingInProgress","Users","pagesCount","Math","ceil","pages","i","push","pagesView","filter","p","length","lowRange","highRange","styles","selectedPage","onClick","event","onPageChange","u","src","photos","small","userPhoto","alt","photo","followed","disabled","some","btn","cont","uniqueUrlName","Preloader","loader","imgs","UsersContainer","getUsersThunkCreator","usersPageData","this","followUserThunkCreator","unfollowUserThunkCreator","React","a","count","totalCount","NaN","login","email","fieldsErrors","Header","header","loginBlock","HeaderClassComponent","getAuthUserData","HeaderContainer","setAuthUserData","connector","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onStatusChange","e","currentTarget","value","prevProps","prevState","onChange","autoFocus","onBlur","statusBlock","onDoubleClick","ProfileInfo","profile","descriptionBlock","large","fullName","lookingForAJob","lookingForAJobDescription","contacts","facebook","github","vk","instagram","twitter","website","youtube","mainLink","Post","likesCount","postsData","setStatus","profileReducer","newPost","newPostText","profileInfo","AddMyPostFormRedux","MyPostsContainer","profilePage","addPost","addPostAC","postElements","postsBlock","posts","Profile","content","ProfileContainer","getUserProfileTC","match","params","getStatusTC","updateStatusTC","statusText","withRouter","LoginReduxForm","Login","formData","log","App","render","DialogsContainer","Friends","friends","icon","img","sidebarReducer","rootReducer","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.834104cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activelink\":\"Navbar_activelink__2l0ss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__2nWS6\",\"dialogsItems\":\"Dialog_dialogsItems__1Ylnr\",\"active\":\"Dialog_active__24gaD\",\"dialog\":\"Dialog_dialog__3bJrQ\",\"messages\":\"Dialog_messages__19Bic\",\"message\":\"Dialog_message__1YXnE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Users_body__3g2q8\",\"pages\":\"Users_pages__2ZPtK\",\"photo\":\"Users_photo__2hOPg\",\"cont\":\"Users_cont__3AYXt\",\"btn\":\"Users_btn__9AIH5\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"imgs\":\"Users_imgs__2XvSo\"};","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from 'react-router-dom';\n\nexport type SitebarTypeProps = {\n    // appState: StateType\n}\n\nconst Navbar: React.FC<SitebarTypeProps> = (prpps) => {\n    return (\n        (\n            <nav className={s.nav}>\n\n                <div className={s.item}>\n                    <NavLink to=\"/profile\" activeClassName={s.activelink}> Profile </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/dialogs\" activeClassName={s.activelink}> Messages </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/users\" activeClassName={s.activelink}> Users </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/news\" activeClassName={s.activelink}> News </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/music\" activeClassName={s.activelink}> Music </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/setting\" activeClassName={s.activelink}> Settings </NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to=\"/friends\" activeClassName={s.activelink}> Friends </NavLink>\n                </div>\n\n            </nav>\n        )\n    )\n}\nexport default Navbar;\n","import React from \"react\";\nimport s from './News.module.css'\n\nconst News = () => {\n    return (\n        <div>\n            NEWS\n        </div>\n    )\n}\n\nexport default News;","import React from \"react\";\nimport s from './Music.module.css'\n\nconst Music = () => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;","import React from \"react\";\nimport s from './Setting.module.css'\n\nconst Setting = () => {\n    return (\n        <div>\n            Setting\n        </div>\n    )\n}\n\nexport default Setting;","import React from 'react';\n\ntype FriendTypeProps = {\n    // photo: SitebarType\n}\n\nconst MyFriends: React.FC<FriendTypeProps> = (props) => {\n\n    // let friendsElements = props.photo.icon.map(f => <Friends key={f.id}/>);\n    // let messagesElements = props.messages.map(m => <Message name={m.name}/>);\n\n    return (\n      <div>\n          <div>\n              {/*{friendsElements}*/}\n          </div>\n          <div>\n              {/*{messagesElements}*/}\n          </div>\n      </div>\n    )\n}\n\nexport default MyFriends;\n","import {ActionsTypes} from '../types/dispatchTypes';\nimport {DialogType, MessagesType} from '../types/types';\n\nconst SEND_MESSAGE = 'SEND-MESSAGE ';\n\nconst initialState = {\n\tdialogs: [\n\t\t{id: 1, name: 'Dimych'},\n\t\t{id: 2, name: 'Andrey'},\n\t\t{id: 3, name: 'Sveta'},\n\t\t{id: 4, name: 'Sasha'},\n\t\t{id: 5, name: 'Valera'},\n\t\t{id: 6, name: 'Viktor'},\n\t] as Array<DialogType>,\n\tmessages: [\n\t\t{id: 1, message: 'Hello!!!'},\n\t\t{id: 2, message: 'Haw are you?'},\n\t\t{id: 3, message: 'This is my friend.'},\n\t\t{id: 4, message: 'yo'},\n\t\t{id: 5, message: 'yo'},\n\t] as Array<MessagesType>,\n};\n\nexport type initialStateType = typeof initialState\n\nexport const dialogsReducer = (state: initialStateType = initialState, action: ActionsTypes): initialStateType => {\n\tswitch (action.type) {\n\t\tcase SEND_MESSAGE:\n\t\t\tlet body = action.newMessageBody;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: [...state.messages, {id: 6, message: body}]\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const sendMessageAC = (newMessageBody: string) => {\n\treturn {\n\t\ttype: SEND_MESSAGE,\n\t\tnewMessageBody: newMessageBody\n\t} as const\n}\n\nexport default dialogsReducer;\n","import React from 'react';\nimport s from './../Dialog.module.css'\n\n\nexport type MessageItemProps = {\n    message: string\n}\n\n\nconst Message: React.FC<MessageItemProps> = (props) => {\n    return <div className={s.dialog}> {props.message} </div>\n}\n\n\nexport default Message;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './../Dialog.module.css'\nimport {DialogItemType} from '../../../types/types';\n\n// export type DialogItemProps = {\n//     name: string\n//     id: number\n// }\n\nconst DialogItem: React.FC<DialogItemType> = (props) => {\n    let path = '/dialogs/' + props.id;\n\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path} className={s.dialog} activeClassName={s.active}>{props.name}</NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem;\n","import React, {ChangeEvent} from 'react';\nimport s from './Dialog.module.css'\nimport Message from './Message/Message';\nimport DialogItem from './DialogItem/DialogItem';\nimport {DialogsPropsType} from '../../types/types';\nimport {Redirect} from 'react-router-dom';\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\n\n\nconst Dialogs = (props: DialogsPropsType) => {\n\tconst dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n\t// let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\n\tconst messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>);\n\t// let messagesElements = state.messages.map(m => <Message message={m.message}/>);\n\tconst newMessageBody = props.dialogsPage.newMessageBody;\n\n\tconst onNewMessage = (values: any) => {\n\t\tprops.sendMessage(values.newMessageBody);\n\t}\n\n\treturn (\n\t\t<div className={s.dialogs}>\n\t\t\t<div className={s.dialogsItems}>\n\t\t\t\t{dialogsElements}\n\n\t\t\t</div>\n\t\t\t<div className={s.messages}>\n\t\t\t\t<div>{messagesElements}</div>\n\t\t\t</div>\n\t\t\t<AddMessageFormRedux onSubmit={onNewMessage}/>\n\t\t</div>\n\t)\n}\n\ntype AddMessageFormPropsType = {\n\t// newMessageBody: string\n}\n\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormPropsType>> = (props) => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<div>\n\t\t\t\t<div><Field component={'textarea'} name={'newMessageBody'} placeholder=\"Enter your message\"/></div>\n\t\t\t\t<div>\n\t\t\t\t\t<button> Sent </button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst AddMessageFormRedux = reduxForm<AddMessageFormPropsType>({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Dialogs;\n","import React, { ComponentType } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport { AppStateType } from '../redux/redux-store';\n\ntype MapStateToPropsForRedirectType = {\n\tisAuth: boolean\n}\n\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStateToPropsForRedirectType => {\n\treturn {\n\t\tisAuth: state.authData.isAuth\n\t}\n}\n\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\n\tconst RedirectComponent = (props: MapStateToPropsForRedirectType) => {\n\t\tlet {isAuth, ...restProps} = props\n\t\tif (!isAuth) return <Redirect to=\"/login\"/>\n\t\treturn <Component {...restProps as T}/>\n\t}\n\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n\treturn ConnectedAuthRedirectComponent;\n}","import React from 'react';\nimport {initialStateType, sendMessageAC} from '../../redux/dialogsReducer';\nimport {connect} from 'react-redux';\nimport {AppDispatchType, AppStateType} from '../../redux/redux-store';\nimport Dialogs from './Dialogs';\nimport { withAuthRedirect } from '../../hok/witthAuthRedirect';\nimport { compose } from 'redux';\n\n\ntype MapStateToPropsType = {\n    dialogsPage: initialStateType\n}\n\ntype MapDispatchToPropsType = {\n    // updateNewMessageBody: (body: string) => void\n    sendMessage: (newMessageBody: string) => void\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogsPage, /*state.dialogsPage*/\n    }\n}\nconst mapDispatchToProps = (dispatch: AppDispatchType): MapDispatchToPropsType => {\n    return {\n        // updateNewMessageBody: (body: string) => {\n        //\n        //     dispatch(updateNewMessageBodyAC(body))\n        // },\n        sendMessage: (newMessageBody: string) => {\n            dispatch(sendMessageAC(newMessageBody))\n        }\n    }\n}\n\n// @ts-ignore\n// const DialogsContainer = withAuthRedirect (connect (mapStateToProps, mapDispatchToProps) (Dialogs));\n\nexport default compose<React.ComponentType>(\n    connect (mapStateToProps, mapDispatchToProps),\nwithAuthRedirect\n)(Dialogs);\n\n","import axios from 'axios';\nimport {ProfileInfoType} from '../types/types';\n\nconst instance = axios.create({\n\tbaseURL: `https://social-network.samuraijs.com/api/1.0/`,\n\twithCredentials: true,\n\theaders: {'API-KEY': '6587bf96-e19c-43d8-b7f7-8a779c2e9e9d'}\n})\n\nexport const usersAPI = {\n\tgetUsers: (currentPage: number, pageSize: number) => {\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\n\t\t\t.then(response => response.data)\n\t},\n\tfollowUsers: (id: number) => {\n\t\treturn instance.post(`follow/${id}`,)\n\t\t\t.then(response => response.data.resultCode)\n\t},\n\tunfollowUsers: (id: number) => {\n\t\treturn instance.delete(`follow/${id}`,)\n\t\t\t.then(response => response.data.resultCode)\n\t},\n\tgetAuth: () => {\n\t\tconsole.warn('use authAPI')\n\t\treturn authAPI.getAuth()\n\t},\n\tgetProfile: (userId: string) => {\n\t\tconsole.warn('Obsolete method. Please profileAPI object.')\n\t\treturn profileAPI.getProfile(userId);\n\t}\n}\n\nexport const authAPI = {\n\tgetAuth: () => {\n\t\treturn instance.get(`auth/me`)\n\t\t\t.then(response => response.data)\n\t},\n}\n\nexport const profileAPI = {\n\tgetProfile: (userId: string) => {\n\t\treturn instance.get(`profile/${userId}`)\n\t\t\t.then(response => response.data)\n\t},\n\tgetStatus: (userId: string) => {\n\t\treturn instance.get(`profile/status/${userId}`)\n\t},\n\tupdateStatus(newText: string) {\n\t\treturn instance.put(`profile/status/`, {status: newText})\n\t}\n}","import {usersAPI} from '../api/api';\nimport {\n\tDispatchActionsType,\n\tFollowUserAT,\n\tSetCurrentPageAT,\n\tSetFollowingInProgress,\n\tsetIsFetchingAT,\n\tsetTotalUserCountAT,\n\tSetUsersAT,\n\tUnfollowUserAT\n} from '../types/dispatchTypes';\nimport {UsersPageDataType, UserType} from '../types/types';\nimport {AppDispatchType} from './redux-store';\n\nconst initialState = {\n\titems: [],\n\tpageSize: 9,\n\ttotalUsersCount: 10,\n\tcurrentPage: 1,\n\tisFetching: false,\n\tfollowingInProgress: []\n}\n\nexport const usersReducer = (state: UsersPageDataType = initialState, action: DispatchActionsType): UsersPageDataType => {\n\tswitch (action.type) {\n\t\tcase 'FOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: state.items.map(u => u.id === action.userID ? {...u, followed: true} : u)\n\t\t\t}\n\t\tcase 'UNFOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\titems: state.items.map(u => u.id === action.userID ? {...u, followed: false} : u)\n\t\t\t}\n\t\tcase 'SET-USERS':\n\t\t\treturn {...state, items: [...action.items]}\n\t\tcase 'SET-CURRENT-PAGE':\n\t\t\treturn {...state, currentPage: action.currentPage}\n\t\tcase 'SET-TOTAL-USER-COUNT':\n\t\t\treturn {...state, totalUsersCount: action.count}\n\t\tcase 'TOGGLE-IS-FETCHING':\n\t\t\treturn {...state, isFetching: action.isFetching}\n\t\tcase 'SET-FOLLOWING-IN-PROGRESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfollowingInProgress: action.isFetching\n\t\t\t\t\t? [...state.followingInProgress, action.userId]\n\t\t\t\t\t: state.followingInProgress.filter(id => id !== action.userId)\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const followUser = (userID: number): FollowUserAT => {\n\treturn {type: 'FOLLOW', userID}\n}\nexport const unfollowUser = (userID: number): UnfollowUserAT => {\n\treturn {type: 'UNFOLLOW', userID}\n}\nexport const setUsers = (items: UserType[]): SetUsersAT => {\n\treturn {type: 'SET-USERS', items}\n}\nexport const setCurrentPage = (currentPage: number): SetCurrentPageAT => {\n\treturn {type: 'SET-CURRENT-PAGE', currentPage}\n}\nexport const setTotalUserCount = (totalUsersCount: number): setTotalUserCountAT => {\n\treturn {type: 'SET-TOTAL-USER-COUNT', count: totalUsersCount}\n}\nexport const toggleIsFetching = (isFetching: boolean): setIsFetchingAT => {\n\treturn {type: 'TOGGLE-IS-FETCHING', isFetching}\n}\nexport const setFollowingInProgress = (isFetching: boolean, userId: number): SetFollowingInProgress => {\n\treturn {type: 'SET-FOLLOWING-IN-PROGRESS', isFetching, userId}\n}\n\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\n\treturn async (dispatch: AppDispatchType) => {\n\t\tdispatch(toggleIsFetching(true));\n\t\tdispatch(setCurrentPage(currentPage));\n\t\tlet data = await usersAPI.getUsers(currentPage, pageSize);\n\t\tdispatch(toggleIsFetching(false));\n\t\tdispatch(setUsers(data.items));\n\t\tdispatch(setTotalUserCount(data.totalCount));\n\t}\n}\nexport const followUserThunkCreator = (userId: number) => (dispatch: AppDispatchType) => {\n\tdispatch(setFollowingInProgress(true, userId))\n\tusersAPI.followUsers(userId)\n\t\t.then(response => {\n\t\t\tif (response === 0) {\n\t\t\t\tdispatch(followUser(userId))\n\t\t\t}\n\t\t\tdispatch(setFollowingInProgress(false, userId))\n\t\t})\n}\nexport const unfollowUserThunkCreator = (userId: number) => (dispatch: AppDispatchType) => {\n\tdispatch(setFollowingInProgress(true, userId))\n\tusersAPI.unfollowUsers(userId)\n\t\t.then(response => {\n\t\t\tif (response === 0) {\n\t\t\t\tdispatch(unfollowUser(userId))\n\t\t\t}\n\t\t\tdispatch(setFollowingInProgress(false, userId))\n\t\t})\n}\n","export default __webpack_public_path__ + \"static/media/user.a603a401.png\";","import React from 'react';\nimport styles from './Users.module.css'\nimport {UserType} from '../../types/types';\nimport userPhoto from '../../assets/images/user.png'\nimport {NavLink} from 'react-router-dom';\n\ntype UsersPropsType = {\n\ttotalUsersCount: number\n\tpageSize: number\n\tcurrentPage: number\n\titems: UserType[]\n\tfollowingInProgress: number[]\n\tonPageChange: (pegeNumber: number) => void\n\tfollowUser: (userID: number) => void\n\tunfollowUser: (userID: number) => void\n}\n\nexport const Users = (props: UsersPropsType) => {\n\tconst pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n\n\tconst pages = [];\n\tfor (let i = 1; i <= pagesCount; i++) {\n\t\tpages.push(i)\n\t}\n\n\tlet pagesView: number[] = []\n\tif (props.currentPage === 1) {\n\t\tpagesView = pages.filter(p => p < 10)\n\t\tpagesView.push(pages.length)\n\t} else if (props.currentPage === pages.length) {\n\t\tpagesView.push(1)\n\t\tpagesView = [...pagesView, ...pages.filter(p => p > props.currentPage - 9)]\n\t} else if (props.currentPage > pages.length - 9) {\n\t\tpagesView.push(1)\n\t\tlet lowRange = props.currentPage - 4\n\t\tlet highRange = props.currentPage + 5\n\t\tpagesView = [...pagesView, ...pages.filter(p => p > lowRange && p < highRange)]\n\t\tpagesView.push(pages.length)\n\t} else {\n\t\tpagesView.push(1)\n\t\tlet lowRange = props.currentPage - 4\n\t\tlet highRange = props.currentPage + 5\n\t\tpagesView = [...pagesView, ...pages.filter(p => p > lowRange && p < highRange)]\n\t}\n\n\treturn <div>\n\t\t<div className={styles.pages}>\n\t\t\t{pages.map(p => {\n\t\t\t\treturn <span\n\t\t\t\t\tclassName={props.currentPage === p ? styles.selectedPage : ''}\n\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\tprops.onPageChange(p)\n\t\t\t\t\t}}>{p}</span>\n\t\t\t})}\n\n\t\t</div>\n\t\t{props.items.map(u => <div key={u.id} className={styles.body}>\n                <span>\n                    <div>\n\t\t\t\t\t\t<NavLink to={'/profile/' + u.id}>\n\t\t\t\t\t\t\t<img src={u.photos.small != null ? u.photos.small : userPhoto} alt=\"avatar\"\n\t\t\t\t\t\t\t\t className={styles.photo}/>\n\t\t\t\t\t\t</NavLink>\n                    </div>\n                    <div>{u.followed\n\t\t\t\t\t\t? <button disabled={props.followingInProgress.some(id => id === u.id)}\n\t\t\t\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t\t\t\t  props.unfollowUser(u.id)\n\t\t\t\t\t\t\t\t  }} className={styles.btn}>Unfollow</button>\n\t\t\t\t\t\t: <button disabled={props.followingInProgress.some(id => id === u.id)}\n\t\t\t\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t\t\t\t  props.followUser(u.id)\n\t\t\t\t\t\t\t\t  }} className={styles.btn}>Follow</button>}</div>\n                </span>\n\t\t\t<span className={styles.cont}>\n                    <span>\n                        <div>{u.name}</div>\n                        <div>{u.uniqueUrlName}</div>\n                    </span>\n                    <span>\n                        <div>{'u.location.country'}</div>\n                        <div>{'u.location.city'}</div>\n                    </span>\n                </span>\n\t\t</div>)}\n\t</div>\n}\n","export default __webpack_public_path__ + \"static/media/preloader.464a6fda.gif\";","import React from 'react';\nimport loader from '../../assets/images/preloader.gif';\nimport s from '../../components/Users/Users.module.css';\n\nexport const Preloader: React.FC = () => {\n\treturn <div><img src={loader} className={s.imgs}/></div>\n}","import React from 'react';\nimport {AppStateType} from '../../redux/redux-store';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {\n\tfollowUser,\n\tsetCurrentPage,\n\tsetTotalUserCount,\n\tsetUsers,\n\ttoggleIsFetching,\n\tunfollowUser,\n\tgetUsersThunkCreator,\n\tfollowUserThunkCreator,\n\tunfollowUserThunkCreator,\n} from '../../redux/usersReducer';\nimport {Users} from './Users';\nimport {Preloader} from '../../common/Preloader/Preloader';\nimport {withAuthRedirect} from '../../hok/witthAuthRedirect';\nimport {compose} from 'redux';\n\n\n// @ts-ignore\nexport class UsersContainer extends React.Component<UsersContainerProps> {\n\n\tcomponentDidMount() {\n\t\tthis.props.getUsersThunkCreator(this.props.usersPageData.currentPage, this.props.usersPageData.pageSize);\n\t}\n\n\tonPageChange = (currentPage: number) => {\n\t\tthis.props.getUsersThunkCreator(currentPage, this.props.usersPageData.pageSize)\n\t}\n\n\trender() {\n\t\treturn <>\n\t\t\t{this.props.usersPageData.isFetching ? <Preloader/> : null}\n\t\t\t<Users\n\t\t\t\tfollowUser={this.props.followUserThunkCreator}\n\t\t\t\tunfollowUser={this.props.unfollowUserThunkCreator}\n\t\t\t\titems={this.props.usersPageData.items}\n\t\t\t\tfollowingInProgress={this.props.usersPageData.followingInProgress}\n\t\t\t\tonPageChange={this.onPageChange}\n\t\t\t\ttotalUsersCount={this.props.usersPageData.totalUsersCount}\n\t\t\t\tpageSize={this.props.usersPageData.pageSize}\n\t\t\t\tcurrentPage={this.props.usersPageData.currentPage}\n\t\t\t/>\n\t\t</>\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tusersPageData: state.usersPageData,\n\t}\n}\n\nexport default compose<React.ComponentType>(\n\twithAuthRedirect,\n\tconnect(mapStateToProps, {\n\t\tfollowUser,\n\t\tunfollowUser,\n\t\tsetCurrentPage,\n\t\tgetUsersThunkCreator,\n\t\tfollowUserThunkCreator,\n\t\tunfollowUserThunkCreator,\n\t})\n)(UsersContainer)","import {AuthType} from '../types/types';\nimport { DispatchActionsType, SetUserDataAT} from '../types/dispatchTypes';\nimport { AppDispatchType } from './redux-store';\nimport { usersAPI } from '../api/api';\n\nlet initialState: AuthType = {\n\tdata:\n\t\t{\n\t\t\tid: NaN,\n\t\t\tlogin: '',\n\t\t\temail: '',\n\t\t},\n\tisAuth: false,\n\tmessages: [],\n\tfieldsErrors: [],\n\tresultCode: 0,\n}\n\nexport const authReducer = (state = initialState, action: DispatchActionsType) => {\n\tswitch (action.type) {\n\t\tcase 'SET-USER-DATA':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: {...action.data},\n\t\t\t\tisAuth: true\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const setAuthUserData = (id: number, login: string, email: string): SetUserDataAT => {\n\treturn {\n\t\ttype: 'SET-USER-DATA',\n\t\tdata: {\n\t\t\tid, login, email,\n\t\t}\n\t}\n}\n\nexport const getAuthUserData = () => (dispatch: AppDispatchType) => {\n\tusersAPI.getAuth()\n\t\t.then(response => {\n\t\t\tif(response.resultCode === 0) {\n\t\t\t\tlet {id, login, email} = response.data\n\t\t\t\tdispatch(setAuthUserData(id, login, email))\n\t\t\t}\n\t\t});\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.css';\n\nexport default Header;\n\n\ntype HeaderPropsType = {\n\tisAuth: boolean,\n\tlogin: string\n}\n\nfunction Header(props: HeaderPropsType) {\n\treturn (\n\t\t<header className={s.header}>\n\t\t\t<div>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR_-I86af1RynC0u9KgHKUD-H6tCwT_Cf_P2Q&usqp=CAU\"/>\n\t\t\t</div>\n\t\t\t<div className={s.loginBlock}>\n\t\t\t\t{props.isAuth ? props.login : <NavLink to={'/login'}>Login</NavLink>}\n\t\t\t</div>\n\t\t</header>\n\t)\n}","import React from 'react';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport {AppStateType} from '../../redux/redux-store';\nimport s from './Header.module.css';\nimport {setAuthUserData, getAuthUserData} from '../../redux/authReducer';\nimport {usersAPI} from '../../api/api';\nimport Header from './Header';\nimport {AuthType} from '../../types/types';\nimport axios from 'axios';\n\n\nclass HeaderClassComponent extends React.Component<HeaderContainerProps> {\n\n\tcomponentDidMount() {\n\t\tusersAPI.getAuth()\n\t\tthis.props.getAuthUserData()\n\t}\n\n\trender() {\n\t\treturn <Header isAuth={this.props.isAuth} login={this.props.login}/>\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {isAuth: state.authData.isAuth, login: state.authData.data.login}\n}\n\nconst connector = connect(mapStateToProps, {\n\tgetAuthUserData,\n});\ntype HeaderContainerProps = ConnectedProps<typeof connector>;\nexport const HeaderContainer = connector(HeaderClassComponent);","import React, {ChangeEvent} from 'react';\nimport s from './ProfileInfo.module.css';\n\ntype ProfileStatusPropsType = {\n\tstatus: string\n\tupdateStatus: (text: string) => void\n}\n\nclass ProfileStatus extends React.Component<ProfileStatusPropsType> {\n\n\tstate = {\n\t\teditMode: false,\n\t\tstatus: this.props.status\n\t}\n\n\tactivateEditMode = () => {\n\t\tthis.setState({\n\t\t\teditMode: true\n\t\t});\n\t}\n\n\tdeactivateEditMode = () => {\n\t\tthis.setState({\n\t\t\teditMode: false\n\t\t});\n\t\tthis.props.updateStatus(this.state.status)\n\t}\n\n\tonStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tthis.setState({\n\t\t\tstatus: e.currentTarget.value\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{ editMode: boolean, status: string }>) {\n\t\tif (prevProps.status !== this.props.status) {\n\t\t\tthis.setState({\n\t\t\t\tstatus: this.props.status\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tthis.state.editMode\n\t\t\t\t\t\t? <input\n\t\t\t\t\t\t\tvalue={this.state.status}\n\t\t\t\t\t\t\tonChange={this.onStatusChange}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonBlur={this.deactivateEditMode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t: <span className={s.statusBlock} onDoubleClick={this.activateEditMode}>\n                            {this.props.status}\n                        </span>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default ProfileStatus;\n","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport {ProfileInfoType} from '../../../types/types';\nimport userPhoto from '../../../assets/images/user.png'\nimport ProfileStatus from './ProfileStatus'\nimport {Preloader} from '../../../common/Preloader/Preloader';\n\ntype ProfileInfoPropsType = {\n\tprofile: ProfileInfoType | null\n\tstatus: string\n\tupdateStatus: (text: string) => void\n}\n\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\n\n\tif (!props.profile) {\n\t\treturn <Preloader/>\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={s.descriptionBlock}>\n\t\t\t\t\t<img src={props.profile?.photos.large ? props.profile.photos.large : userPhoto}/>\n\t\t\t\t\t<ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>{props.profile?.fullName}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>{props.profile?.lookingForAJob ? 'Looking for a job -> ' : null}</span>\n\t\t\t\t\t\t<span>{props.profile?.lookingForAJobDescription}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>{props.profile?.contacts.facebook} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.github} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.vk} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.instagram} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.twitter} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.website} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.youtube} </span>\n\t\t\t\t\t\t<span>{props.profile?.contacts.mainLink} </span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default ProfileInfo;\n","import React from 'react';\nimport s from './Post.module.css';\n\nexport type PostPropsType = {\n    message: string\n    likesCount: number\n}\n\nconst Post = (props: PostPropsType) => {\n    return (\n        <div className={`${s.item} ${s.active}`}>\n            <img src='https://i.guim.co.uk/img/media/bf7e98bd289d189e5b86d3f406f740368c663a6a/85_0_2544_1527/master/2544.jpg?width=1200&height=1200&quality=85&auto=format&fit=crop&s=98cd2e37e0df5d552473c329d88349ee'/>\n            {props.message}\n            <div>\n                <span>like: {props.likesCount}</span>\n            </div>\n        </div>\n    )\n}\nexport default Post;\n","import {PostItemType, ProfileInfoType, ProfilePageDataType} from '../types/types';\nimport {DispatchActionsType, SetProfileStatusAT, SetUserProfileAT} from '../types/dispatchTypes';\nimport {AppDispatchType} from './redux-store';\nimport {profileAPI, usersAPI} from '../api/api';\n\nconst ADD_POST = 'ADD-POST';\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\n\nlet initialState = {\n\tpostsData: [\n\t\t{id: 1, message: 'Hi, how are you', likesCount: 12},\n\t\t{id: 2, message: 'It\\'s my first post', likesCount: 15},\n\t\t{id: 3, message: 'yo yo yo', likesCount: 17},\n\t] as Array<PostItemType>,\n\t// newPostText: 'it-kamasutra.com',\n\tprofile: null,\n\tstatus: ''\n};\n\nexport type initialStateType = typeof initialState\n\n// const profileReducer = (state: initialStateType = initialState, action: ActionsTypes): initialStateType => {\nconst profileReducer = (state: ProfilePageDataType = initialState, action: DispatchActionsType) => {\n\tswitch (action.type) {\n\t\t// case 'UPDATE-NEW-POST-TEXT': {\n\t\t// \treturn {\n\t\t// \t\t...state,\n\t\t// \t\tnewPostText: action.newText\n\t\t// \t}\n\t\t// }\n\t\tcase 'ADD-POST': { // block structure so we can name stateCopy with same name in all cases\n\t\t\tconst newPost: PostItemType = {\n\t\t\t\tid: 5,\n\t\t\t\tmessage: action.newPostText,\n\t\t\t\tlikesCount: 0\n\t\t\t};\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tpostsData: [newPost, ...state.postsData],\n\t\t\t\t\tnewPostText: ''\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t\tcase 'SET-USER-PROFILE': {\n\t\t\treturn {...state, profile: action.profileInfo}\n\t\t}\n\n\t\tcase 'SET-STATUS': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: action.status\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const addPostAC = (newPostText: string) => {\n\treturn {\n\t\ttype: ADD_POST,\n\t\tnewPostText: newPostText\n\t} as const\n}\nconst setUserProfile = (profile: ProfileInfoType): SetUserProfileAT => {\n\treturn {\n\t\ttype: SET_USER_PROFILE,\n\t\tprofileInfo: profile\n\t} as const\n}\nconst setStatus = (status: string): SetProfileStatusAT => {\n\treturn {\n\t\ttype: SET_STATUS,\n\t\tstatus: status\n\t} as const\n}\n\nexport const getUserProfileTC = (id: string) => (dispatch: AppDispatchType) => {\n\tlet userId: string;\n\tid ? userId = id : userId = '17771';\n\tusersAPI.getProfile(userId)\n\t\t.then(response => {\n\t\t\tdispatch(setUserProfile(response))\n\t\t});\n}\n\nexport const getStatusTC = (id: string) => (dispatch: AppDispatchType) => {\n\tlet userId: string;\n\tid ? userId = id : userId = '17771';\n\tprofileAPI.getStatus(userId)\n\t\t.then(response => {\n\t\t\tdispatch(setStatus(response.data))\n\t\t});\n}\n\n// export const changeNewTextAC = (newText: string) => {\n// \treturn {\n// \t\ttype: UPDATE_NEW_POST_TEXT,\n// \t\tnewText: newText\n// \t} as const\n// }\n\nexport const updateStatusTC = (statusText: string) => (dispatch: AppDispatchType) => {\n\tprofileAPI.updateStatus(statusText)\n\t\t.then(response => {\n\t\t\tif (response.data.resultCode === 0) {\n\t\t\t\tdispatch(setStatus(statusText))\n\t\t\t}\n\t\t})\n}\n\nexport default profileReducer;","import React, {ChangeEvent} from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post'\nimport {addPostAC} from '../../../redux/profileReducer';\nimport {AppDispatchType, AppStateType} from '../../../redux/redux-store';\nimport {connect} from 'react-redux';\nimport {MapDispatchToPropsType, MapStateToPropsType, MyPostType} from './types';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\n\nconst MyPosts = (props: MyPostType) => {\n\tconst postElements = props.postsData.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\n\n\tconst newPostElement = React.createRef<HTMLTextAreaElement>();\n\t// const addPost = () => {   /*добавляет пост*/\n\t// \tif (newPostElement.current) {\n\t// \t\tprops.addPost('');\n\t\t\t/*props.updateNewPostText('')*/ /*очищает поле ввода после добавления поста*/\n\t\t// }\n\t// }\n\t// const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n\t// \tprops.onPostChange(e.currentTarget?.value);\n\t\t// let text = e.currentTarget?.value;\n\t// }\n\t//     обработчик принимает событие event\n\t//     типизируем event - ChangeEvent - внутри типизируем на какой элемент событие прилетает\n\t//     в данном случае событие прилетает на HTMLTextAreaElement\n\t\n\tconst onNewPost = (values: any) => {\n\t\tprops.addPost(values.newPostText)\n\t}\n\treturn (\n\t\t<div className={s.postsBlock}>\n\t\t\t{/*{props.postsData[1].message}*/}\n\t\t\t<h3>My posts</h3>\n\t\t\t<div>\n\t\t\t\t<AddMyPostFormRedux onSubmit={onNewPost}/>\n\t\t\t</div>\n\t\t\t<div className={s.posts}>\n\t\t\t\t{postElements}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\ntype AddMyPostFormPropsType = {\n\t\n}\n\nconst AddMyPostForm: React.FC<InjectedFormProps<AddMyPostFormPropsType>> = (props) => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<div>\n                    <Field component={'textarea'} name={'newPostText'} placeholder={'Add posts'}\n\t\t\t\t\t\t// onChange={onPostChange} ref={newPostElement} value={props.newPostText}\n\t\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button>Add post</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst AddMyPostFormRedux = reduxForm<AddMyPostFormPropsType>({form: 'postAddMyPostForm'})(AddMyPostForm)\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n\t// no debugger\n\tpostsData: state.profilePage.postsData,\n\t// newPostText: state.profilePage.newPostText,\n\tprofile: state.profilePage.profile\n})\nconst mapDispatchToProps = (dispatch: AppDispatchType): MapDispatchToPropsType => {\n\t// yes debugger\n\treturn {\n\t\taddPost: (newPostText: string) => {\n\t\t\tdispatch(addPostAC(newPostText))\n\t\t},\n\t\t// onPostChange: (text: string) => {\n\t\t// \tdispatch(changeNewTextAC(text))\n\t\t// }\n\t}\n}\n\nexport const MyPostsContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(\n\tmapStateToProps, mapDispatchToProps\n)(MyPosts)\n","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport {MyPostsContainer} from './MyPosts/MyPosts';\nimport {ProfileInfoType} from '../../types/types';\n\ntype ProfilePropsType = {\n\tprofile: ProfileInfoType | null\n\tstatus: string\n\tupdateStatus: (text: string) => void\n}\n\nfunction Profile(props: ProfilePropsType) {\n\n\treturn (\n\t\t<div className={s.content}>\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n\t\t\t<MyPostsContainer/>\n\t\t</div>\n\t)\n}\n\nexport default Profile;\n","import React from 'react';\nimport Profile from './Profile';\nimport {ProfileInfoType, ProfilePageDataType} from '../../types/types';\nimport axios from 'axios';\nimport {AppStateType} from '../../redux/redux-store';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router-dom';\nimport {getUserProfileTC, getStatusTC, updateStatusTC} from '../../redux/profileReducer'\nimport {usersAPI} from '../../api/api';\nimport {withAuthRedirect} from '../../hok/witthAuthRedirect';\nimport {compose} from 'redux';\n\nclass ProfileContainer extends React.Component<ProfileContainerWithRoutePropsType> {\n\tcomponentDidMount() {\n\t\tthis.props.getUserProfileTC(this.props.match.params.userId)\n\t\tthis.props.getStatusTC(this.props.match.params.userId)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Profile profile={this.props.profile} status={this.props.status}\n\t\t\t\t\t\t updateStatus={this.props.updateStatusTC}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nlet mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tprofile: state.profilePage.profile,\n\t\tstatus: state.profilePage.status\n\t}\n}\n\nconst connector = connect(mapStateToProps, {getUserProfileTC, getStatusTC, updateStatusTC});\ntype ProfileContainerProps = ConnectedProps<typeof connector>;\ntype PathParamsType = { userId: string };\ntype ProfileContainerWithRoutePropsType = RouteComponentProps<PathParamsType> & ProfileContainerProps;\n\nexport default compose<React.ComponentType>(\n\tconnector,\n\twithRouter,\n\t// withAuthRedirect\n)(ProfileContainer)\n","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\n\ntype FormDataType = {\n\tlogin: string\n\tpassword: string\n\trememberMe: boolean\n}\n\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<div>\n\t\t\t\t<Field placeholder={'Login'} name={'login'} component={'input'}/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Field placeholder={'Password'} name={'password'} component={'input'}/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Field type={'checkbox'} name={'rememberMe'} component={'input'}/> remember me\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button>Login</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\n\nconst Login = () => {\n\tconst onSubmit = (formData: FormDataType) => {\n\t\tconsole.log(formData)\n\t}\n\treturn <div>\n\t\t<h1>LOGIN</h1>\n\t\t<LoginReduxForm onSubmit={onSubmit}/>\n\t</div>\n}\n\nexport default Login;","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Setting from './components/Setting/Setting';\nimport Friends from './components/Navbar/Friends/Friends';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport {HeaderContainer} from './components/Header/HeaderContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport Login  from './components/Login/Login';\n\nexport type AppPropsType = {}\n\nconst App: React.FC<AppPropsType> = (props) => {\n\t// const state = props.store.getState()\n\n\treturn (\n\t\t<div className=\"app-wrapper\">\n\t\t\t<HeaderContainer/>\n\t\t\t<Navbar/>\n\t\t\t<div className={'app-wrapper-content'}>\n\t\t\t\t<Route path={'/dialogs'}\n\t\t\t\t\t   render={() => <DialogsContainer/>}/>\n\t\t\t\t<Route path={'/profile/:userId?'}\n\t\t\t\t\t   render={() => <ProfileContainer/>}/>\n\t\t\t\t<Route path={'/users'}\n\t\t\t\t\t   render={() => <UsersContainer/>}/>\n\t\t\t\t<Route path={'/login'}\n\t\t\t\t\t   render={() => <Login/>}/>\n\t\t\t\t<Route path={'/news'} render={() => <News/>}/>\n\t\t\t\t<Route path={'/music'} render={() => <Music/>}/>\n\t\t\t\t<Route path={'/setting'} render={() => <Setting/>}/>\n\t\t\t\t<Route path={'/friends'} render={() => <Friends/>}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\nexport default App;\n","import {SitebarType} from '../types/types';\nimport {ActionsTypes, DispatchActionsType} from '../types/dispatchTypes';\n\n\nlet initialState = {\n    friends: [\n        {id: 1, name: 'Andrey'},\n        {id: 2, name: 'Sasha'},\n        {id: 3, name: 'Viktor'},\n    ],\n    icon: [\n        {id: 1, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_4.jpg'},\n        {id: 2, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_1.jpg'},\n        {id: 3, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_2.jpg'},\n        {id: 4, img: 'https://radiustheme.com/demo/html/cirkle/media/team/team_3.jpg'},\n    ]\n};\n\nconst sidebarReducer = (state: SitebarType = initialState, action: DispatchActionsType) => {\n\n    return state;\n}\n\nexport default sidebarReducer;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport profileReducer from './profileReducer';\nimport dialogsReducer from './dialogsReducer';\nimport sidebarReducer from './sidebarReducer';\nimport {usersReducer} from './usersReducer';\nimport {authReducer} from './authReducer';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form'\n\nexport const rootReducer = combineReducers({\n\tprofilePage: profileReducer,\n\tdialogsPage: dialogsReducer,\n\tsidebarReducer: sidebarReducer,\n\tusersPageData: usersReducer,\n\tauthData: authReducer,\n\tform: formReducer,\n})\n\n\nexport type AppStateType = ReturnType<typeof store.getState>;\nexport type AppDispatchType = typeof store.dispatch;\nexport type StoreType = typeof store;\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\nexport default store;\n\n// export type AppStateType = ReturnType<typeof rootReducer>\n//\n// export const store = createStore(rootReducer);\n//@ts-ignore\nwindow.store = store\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport store, {rootReducer} from './redux/redux-store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter >\n            <Provider store={store}>\n                <App  />\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n// function rerenderEntireTree() {\n//\n// }\n\n// rerenderEntireTree();\n// store.subscribe(rerenderEntireTree);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"profileImage\":\"ProfileInfo_profileImage__V_r63\",\"statusBlock\":\"ProfileInfo_statusBlock__3HLvc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"active\":\"Post_active__1HCRI\"};"],"sourceRoot":""}